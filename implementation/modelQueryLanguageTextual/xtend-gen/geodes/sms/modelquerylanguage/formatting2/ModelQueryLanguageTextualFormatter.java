/**
 * generated by Xtext 2.28.0
 */
package geodes.sms.modelquerylanguage.formatting2;

import ModelQueryLanguage.ModelQuery;
import ModelQueryLanguage.QueryFile;
import com.google.inject.Inject;
import geodes.sms.modelquerylanguage.services.ModelQueryLanguageTextualGrammarAccess;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;

@SuppressWarnings("all")
public class ModelQueryLanguageTextualFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private ModelQueryLanguageTextualGrammarAccess _modelQueryLanguageTextualGrammarAccess;

  protected void _format(final QueryFile queryFile, @Extension final IFormattableDocument document) {
    EList<ModelQuery> _queries = queryFile.getQueries();
    for (final ModelQuery modelQuery : _queries) {
      document.<ModelQuery>format(modelQuery);
    }
  }

  public void format(final Object queryFile, final IFormattableDocument document) {
    if (queryFile instanceof XtextResource) {
      _format((XtextResource)queryFile, document);
      return;
    } else if (queryFile instanceof QueryFile) {
      _format((QueryFile)queryFile, document);
      return;
    } else if (queryFile instanceof EObject) {
      _format((EObject)queryFile, document);
      return;
    } else if (queryFile == null) {
      _format((Void)null, document);
      return;
    } else if (queryFile != null) {
      _format(queryFile, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(queryFile, document).toString());
    }
  }
}
