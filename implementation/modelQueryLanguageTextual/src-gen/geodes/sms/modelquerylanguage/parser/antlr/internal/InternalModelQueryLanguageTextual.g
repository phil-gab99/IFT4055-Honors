/*
 * generated by Xtext 2.28.0
 */
grammar InternalModelQueryLanguageTextual;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package geodes.sms.modelquerylanguage.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package geodes.sms.modelquerylanguage.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import geodes.sms.modelquerylanguage.services.ModelQueryLanguageTextualGrammarAccess;

}

@parser::members {

 	private ModelQueryLanguageTextualGrammarAccess grammarAccess;

    public InternalModelQueryLanguageTextualParser(TokenStream input, ModelQueryLanguageTextualGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "QueryFile";
   	}

   	@Override
   	protected ModelQueryLanguageTextualGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleQueryFile
entryRuleQueryFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryFileRule()); }
	iv_ruleQueryFile=ruleQueryFile
	{ $current=$iv_ruleQueryFile.current; }
	EOF;

// Rule QueryFile
ruleQueryFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getQueryFileAccess().getQueryFileAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getQueryFileAccess().getQueriesModelQueryHeadParentParserRuleCall_1_0_0_0());
						}
						lv_queries_1_1=ruleModelQueryHeadParent
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getQueryFileRule());
							}
							add(
								$current,
								"queries",
								lv_queries_1_1,
								"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ModelQueryHeadParent");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getQueryFileAccess().getQueriesModelQueryNextFromToParserRuleCall_1_0_0_1());
						}
						lv_queries_1_2=ruleModelQueryNextFromTo
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getQueryFileRule());
							}
							add(
								$current,
								"queries",
								lv_queries_1_2,
								"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ModelQueryNextFromTo");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getQueryFileAccess().getQueriesModelQueryModelParserRuleCall_1_0_0_2());
						}
						lv_queries_1_3=ruleModelQueryModel
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getQueryFileRule());
							}
							add(
								$current,
								"queries",
								lv_queries_1_3,
								"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ModelQueryModel");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getQueryFileAccess().getQueriesModelQueryModelContentsParserRuleCall_1_0_0_3());
						}
						lv_queries_1_4=ruleModelQueryModelContents
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getQueryFileRule());
							}
							add(
								$current,
								"queries",
								lv_queries_1_4,
								"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ModelQueryModelContents");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				{
					newCompositeNode(grammarAccess.getQueryFileAccess().getELEM_SEPARATORParserRuleCall_1_1_0());
				}
				ruleELEM_SEPARATOR
				{
					afterParserOrEnumRuleCall();
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getQueryFileAccess().getQueriesModelQueryHeadParentParserRuleCall_1_1_1_0_0());
							}
							lv_queries_3_1=ruleModelQueryHeadParent
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getQueryFileRule());
								}
								add(
									$current,
									"queries",
									lv_queries_3_1,
									"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ModelQueryHeadParent");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getQueryFileAccess().getQueriesModelQueryNextFromToParserRuleCall_1_1_1_0_1());
							}
							lv_queries_3_2=ruleModelQueryNextFromTo
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getQueryFileRule());
								}
								add(
									$current,
									"queries",
									lv_queries_3_2,
									"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ModelQueryNextFromTo");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getQueryFileAccess().getQueriesModelQueryModelParserRuleCall_1_1_1_0_2());
							}
							lv_queries_3_3=ruleModelQueryModel
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getQueryFileRule());
								}
								add(
									$current,
									"queries",
									lv_queries_3_3,
									"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ModelQueryModel");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getQueryFileAccess().getQueriesModelQueryModelContentsParserRuleCall_1_1_1_0_3());
							}
							lv_queries_3_4=ruleModelQueryModelContents
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getQueryFileRule());
								}
								add(
									$current,
									"queries",
									lv_queries_3_4,
									"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ModelQueryModelContents");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)*
			{
				newCompositeNode(grammarAccess.getQueryFileAccess().getQUERY_ENDParserRuleCall_1_2());
			}
			ruleQUERY_END
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleModelQueryHeadParent
entryRuleModelQueryHeadParent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelQueryHeadParentRule()); }
	iv_ruleModelQueryHeadParent=ruleModelQueryHeadParent
	{ $current=$iv_ruleModelQueryHeadParent.current; }
	EOF;

// Rule ModelQueryHeadParent
ruleModelQueryHeadParent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelQueryHeadParentAccess().getOperatorOperatorEnumRuleCall_0_0_0());
					}
					lv_operator_0_1=ruleOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelQueryHeadParentRule());
						}
						set(
							$current,
							"operator",
							lv_operator_0_1,
							"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.Operator");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getModelQueryHeadParentAccess().getOperatorWhereSynEnumRuleCall_0_0_1());
					}
					lv_operator_0_2=ruleWhereSyn
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelQueryHeadParentRule());
						}
						set(
							$current,
							"operator",
							lv_operator_0_2,
							"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.WhereSyn");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					lv_subject_1_1='head'
					{
						newLeafNode(lv_subject_1_1, grammarAccess.getModelQueryHeadParentAccess().getSubjectHeadKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelQueryHeadParentRule());
						}
						setWithLastConsumed($current, "subject", lv_subject_1_1, null);
					}
					    |
					lv_subject_1_2='parent'
					{
						newLeafNode(lv_subject_1_2, grammarAccess.getModelQueryHeadParentAccess().getSubjectParentKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelQueryHeadParentRule());
						}
						setWithLastConsumed($current, "subject", lv_subject_1_2, null);
					}
				)
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getModelQueryHeadParentAccess().getCONTAINER_DELIM_LEFTParserRuleCall_2_0());
			}
			ruleCONTAINER_DELIM_LEFT
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelQueryHeadParentAccess().getContainerParametersBranchParameterParserRuleCall_2_1_0());
					}
					lv_containerParameters_3_0=ruleBranchParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelQueryHeadParentRule());
						}
						add(
							$current,
							"containerParameters",
							lv_containerParameters_3_0,
							"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.BranchParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				{
					newCompositeNode(grammarAccess.getModelQueryHeadParentAccess().getELEM_SEPARATORParserRuleCall_2_2_0());
				}
				ruleELEM_SEPARATOR
				{
					afterParserOrEnumRuleCall();
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getModelQueryHeadParentAccess().getContainerParametersBranchParameterParserRuleCall_2_2_1_0());
						}
						lv_containerParameters_5_0=ruleBranchParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelQueryHeadParentRule());
							}
							add(
								$current,
								"containerParameters",
								lv_containerParameters_5_0,
								"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.BranchParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			{
				newCompositeNode(grammarAccess.getModelQueryHeadParentAccess().getCONTAINER_DELIM_RIGHTParserRuleCall_2_3());
			}
			ruleCONTAINER_DELIM_RIGHT
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleBranchParameter
entryRuleBranchParameter returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBranchParameterRule()); }
	iv_ruleBranchParameter=ruleBranchParameter
	{ $current=$iv_ruleBranchParameter.current.getText(); }
	EOF;

// Rule BranchParameter
ruleBranchParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='branchName'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getBranchParameterAccess().getBranchNameKeyword_0_0());
			}
			    |
			kw='active'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getBranchParameterAccess().getActiveKeyword_0_1());
			}
		)
		(
			{
				newCompositeNode(grammarAccess.getBranchParameterAccess().getPARAM_EQParserRuleCall_1_0());
			}
			this_PARAM_EQ_2=rulePARAM_EQ
			{
				$current.merge(this_PARAM_EQ_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getBranchParameterAccess().getPARAM_GTParserRuleCall_1_1());
			}
			this_PARAM_GT_3=rulePARAM_GT
			{
				$current.merge(this_PARAM_GT_3);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getBranchParameterAccess().getPARAM_LTParserRuleCall_1_2());
			}
			this_PARAM_LT_4=rulePARAM_LT
			{
				$current.merge(this_PARAM_LT_4);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getBranchParameterAccess().getPARAM_NEParserRuleCall_1_3());
			}
			this_PARAM_NE_5=rulePARAM_NE
			{
				$current.merge(this_PARAM_NE_5);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		{
			newCompositeNode(grammarAccess.getBranchParameterAccess().getEStringParserRuleCall_2());
		}
		this_EString_6=ruleEString
		{
			$current.merge(this_EString_6);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleModelQueryNextFromTo
entryRuleModelQueryNextFromTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelQueryNextFromToRule()); }
	iv_ruleModelQueryNextFromTo=ruleModelQueryNextFromTo
	{ $current=$iv_ruleModelQueryNextFromTo.current; }
	EOF;

// Rule ModelQueryNextFromTo
ruleModelQueryNextFromTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelQueryNextFromToAccess().getOperatorOperatorEnumRuleCall_0_0_0());
					}
					lv_operator_0_1=ruleOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelQueryNextFromToRule());
						}
						set(
							$current,
							"operator",
							lv_operator_0_1,
							"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.Operator");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getModelQueryNextFromToAccess().getOperatorWhereSynEnumRuleCall_0_0_1());
					}
					lv_operator_0_2=ruleWhereSyn
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelQueryNextFromToRule());
						}
						set(
							$current,
							"operator",
							lv_operator_0_2,
							"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.WhereSyn");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					lv_subject_1_1='next'
					{
						newLeafNode(lv_subject_1_1, grammarAccess.getModelQueryNextFromToAccess().getSubjectNextKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelQueryNextFromToRule());
						}
						setWithLastConsumed($current, "subject", lv_subject_1_1, null);
					}
					    |
					lv_subject_1_2='from'
					{
						newLeafNode(lv_subject_1_2, grammarAccess.getModelQueryNextFromToAccess().getSubjectFromKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelQueryNextFromToRule());
						}
						setWithLastConsumed($current, "subject", lv_subject_1_2, null);
					}
					    |
					lv_subject_1_3='to'
					{
						newLeafNode(lv_subject_1_3, grammarAccess.getModelQueryNextFromToAccess().getSubjectToKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelQueryNextFromToRule());
						}
						setWithLastConsumed($current, "subject", lv_subject_1_3, null);
					}
				)
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getModelQueryNextFromToAccess().getCONTAINER_DELIM_LEFTParserRuleCall_2_0());
			}
			ruleCONTAINER_DELIM_LEFT
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelQueryNextFromToAccess().getContainerParametersCommitParameterParserRuleCall_2_1_0());
					}
					lv_containerParameters_3_0=ruleCommitParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelQueryNextFromToRule());
						}
						add(
							$current,
							"containerParameters",
							lv_containerParameters_3_0,
							"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.CommitParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				{
					newCompositeNode(grammarAccess.getModelQueryNextFromToAccess().getELEM_SEPARATORParserRuleCall_2_2_0());
				}
				ruleELEM_SEPARATOR
				{
					afterParserOrEnumRuleCall();
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getModelQueryNextFromToAccess().getContainerParametersCommitParameterParserRuleCall_2_2_1_0());
						}
						lv_containerParameters_5_0=ruleCommitParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelQueryNextFromToRule());
							}
							add(
								$current,
								"containerParameters",
								lv_containerParameters_5_0,
								"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.CommitParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			{
				newCompositeNode(grammarAccess.getModelQueryNextFromToAccess().getCONTAINER_DELIM_RIGHTParserRuleCall_2_3());
			}
			ruleCONTAINER_DELIM_RIGHT
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleCommitParameter
entryRuleCommitParameter returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCommitParameterRule()); }
	iv_ruleCommitParameter=ruleCommitParameter
	{ $current=$iv_ruleCommitParameter.current.getText(); }
	EOF;

// Rule CommitParameter
ruleCommitParameter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='hash'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getCommitParameterAccess().getHashKeyword_0_0());
			}
			    |
			kw='author'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getCommitParameterAccess().getAuthorKeyword_0_1());
			}
			    |
			kw='message'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getCommitParameterAccess().getMessageKeyword_0_2());
			}
			    |
			kw='timestamp'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getCommitParameterAccess().getTimestampKeyword_0_3());
			}
		)
		(
			{
				newCompositeNode(grammarAccess.getCommitParameterAccess().getPARAM_EQParserRuleCall_1_0());
			}
			this_PARAM_EQ_4=rulePARAM_EQ
			{
				$current.merge(this_PARAM_EQ_4);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getCommitParameterAccess().getPARAM_GTParserRuleCall_1_1());
			}
			this_PARAM_GT_5=rulePARAM_GT
			{
				$current.merge(this_PARAM_GT_5);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getCommitParameterAccess().getPARAM_LTParserRuleCall_1_2());
			}
			this_PARAM_LT_6=rulePARAM_LT
			{
				$current.merge(this_PARAM_LT_6);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getCommitParameterAccess().getPARAM_NEParserRuleCall_1_3());
			}
			this_PARAM_NE_7=rulePARAM_NE
			{
				$current.merge(this_PARAM_NE_7);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		{
			newCompositeNode(grammarAccess.getCommitParameterAccess().getEStringParserRuleCall_2());
		}
		this_EString_8=ruleEString
		{
			$current.merge(this_EString_8);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleModelQueryModel
entryRuleModelQueryModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelQueryModelRule()); }
	iv_ruleModelQueryModel=ruleModelQueryModel
	{ $current=$iv_ruleModelQueryModel.current; }
	EOF;

// Rule ModelQueryModel
ruleModelQueryModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelQueryModelAccess().getOperatorOperatorEnumRuleCall_0_0_0());
					}
					lv_operator_0_1=ruleOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelQueryModelRule());
						}
						set(
							$current,
							"operator",
							lv_operator_0_1,
							"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.Operator");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getModelQueryModelAccess().getOperatorWhereSynEnumRuleCall_0_0_1());
					}
					lv_operator_0_2=ruleWhereSyn
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelQueryModelRule());
						}
						set(
							$current,
							"operator",
							lv_operator_0_2,
							"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.WhereSyn");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				lv_subject_1_0='model'
				{
					newLeafNode(lv_subject_1_0, grammarAccess.getModelQueryModelAccess().getSubjectModelKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModelQueryModelRule());
					}
					setWithLastConsumed($current, "subject", lv_subject_1_0, "model");
				}
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getModelQueryModelAccess().getCONTAINER_DELIM_LEFTParserRuleCall_2_0());
			}
			ruleCONTAINER_DELIM_LEFT
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelQueryModelAccess().getContainerParametersModelParamaterParserRuleCall_2_1_0());
					}
					lv_containerParameters_3_0=ruleModelParamater
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelQueryModelRule());
						}
						add(
							$current,
							"containerParameters",
							lv_containerParameters_3_0,
							"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ModelParamater");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				{
					newCompositeNode(grammarAccess.getModelQueryModelAccess().getELEM_SEPARATORParserRuleCall_2_2_0());
				}
				ruleELEM_SEPARATOR
				{
					afterParserOrEnumRuleCall();
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getModelQueryModelAccess().getContainerParametersModelParamaterParserRuleCall_2_2_1_0());
						}
						lv_containerParameters_5_0=ruleModelParamater
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelQueryModelRule());
							}
							add(
								$current,
								"containerParameters",
								lv_containerParameters_5_0,
								"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ModelParamater");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			{
				newCompositeNode(grammarAccess.getModelQueryModelAccess().getCONTAINER_DELIM_RIGHTParserRuleCall_2_3());
			}
			ruleCONTAINER_DELIM_RIGHT
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleModelParamater
entryRuleModelParamater returns [String current=null]:
	{ newCompositeNode(grammarAccess.getModelParamaterRule()); }
	iv_ruleModelParamater=ruleModelParamater
	{ $current=$iv_ruleModelParamater.current.getText(); }
	EOF;

// Rule ModelParamater
ruleModelParamater returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='modelId'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getModelParamaterAccess().getModelIdKeyword_0_0());
			}
			    |
			kw='isDeleted'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getModelParamaterAccess().getIsDeletedKeyword_0_1());
			}
			    |
			kw='owner'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getModelParamaterAccess().getOwnerKeyword_0_2());
			}
			    |
			kw='creationDate'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getModelParamaterAccess().getCreationDateKeyword_0_3());
			}
			    |
			kw='path'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getModelParamaterAccess().getPathKeyword_0_4());
			}
		)
		(
			{
				newCompositeNode(grammarAccess.getModelParamaterAccess().getPARAM_EQParserRuleCall_1_0());
			}
			this_PARAM_EQ_5=rulePARAM_EQ
			{
				$current.merge(this_PARAM_EQ_5);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getModelParamaterAccess().getPARAM_GTParserRuleCall_1_1());
			}
			this_PARAM_GT_6=rulePARAM_GT
			{
				$current.merge(this_PARAM_GT_6);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getModelParamaterAccess().getPARAM_LTParserRuleCall_1_2());
			}
			this_PARAM_LT_7=rulePARAM_LT
			{
				$current.merge(this_PARAM_LT_7);
			}
			{
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getModelParamaterAccess().getPARAM_NEParserRuleCall_1_3());
			}
			this_PARAM_NE_8=rulePARAM_NE
			{
				$current.merge(this_PARAM_NE_8);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)
		{
			newCompositeNode(grammarAccess.getModelParamaterAccess().getEStringParserRuleCall_2());
		}
		this_EString_9=ruleEString
		{
			$current.merge(this_EString_9);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleModelQueryModelContents
entryRuleModelQueryModelContents returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelQueryModelContentsRule()); }
	iv_ruleModelQueryModelContents=ruleModelQueryModelContents
	{ $current=$iv_ruleModelQueryModelContents.current; }
	EOF;

// Rule ModelQueryModelContents
ruleModelQueryModelContents returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getModelQueryModelContentsAccess().getOperatorOperatorEnumRuleCall_0_0_0());
					}
					lv_operator_0_1=ruleOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelQueryModelContentsRule());
						}
						set(
							$current,
							"operator",
							lv_operator_0_1,
							"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.Operator");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getModelQueryModelContentsAccess().getOperatorWhereSynEnumRuleCall_0_0_1());
					}
					lv_operator_0_2=ruleWhereSyn
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelQueryModelContentsRule());
						}
						set(
							$current,
							"operator",
							lv_operator_0_2,
							"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.WhereSyn");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					lv_subject_1_1='changed'
					{
						newLeafNode(lv_subject_1_1, grammarAccess.getModelQueryModelContentsAccess().getSubjectChangedKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelQueryModelContentsRule());
						}
						setWithLastConsumed($current, "subject", lv_subject_1_1, null);
					}
					    |
					lv_subject_1_2='created'
					{
						newLeafNode(lv_subject_1_2, grammarAccess.getModelQueryModelContentsAccess().getSubjectCreatedKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelQueryModelContentsRule());
						}
						setWithLastConsumed($current, "subject", lv_subject_1_2, null);
					}
					    |
					lv_subject_1_3='deleted'
					{
						newLeafNode(lv_subject_1_3, grammarAccess.getModelQueryModelContentsAccess().getSubjectDeletedKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModelQueryModelContentsRule());
						}
						setWithLastConsumed($current, "subject", lv_subject_1_3, null);
					}
				)
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getModelQueryModelContentsAccess().getCONTAINER_DELIM_LEFTParserRuleCall_2_0());
			}
			ruleCONTAINER_DELIM_LEFT
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelQueryModelContentsAccess().getContainerParametersCommitParameterParserRuleCall_2_1_0());
					}
					lv_containerParameters_3_0=ruleCommitParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelQueryModelContentsRule());
						}
						add(
							$current,
							"containerParameters",
							lv_containerParameters_3_0,
							"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.CommitParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				{
					newCompositeNode(grammarAccess.getModelQueryModelContentsAccess().getELEM_SEPARATORParserRuleCall_2_2_0());
				}
				ruleELEM_SEPARATOR
				{
					afterParserOrEnumRuleCall();
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getModelQueryModelContentsAccess().getContainerParametersCommitParameterParserRuleCall_2_2_1_0());
						}
						lv_containerParameters_5_0=ruleCommitParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelQueryModelContentsRule());
							}
							add(
								$current,
								"containerParameters",
								lv_containerParameters_5_0,
								"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.CommitParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			{
				newCompositeNode(grammarAccess.getModelQueryModelContentsAccess().getCONTAINER_DELIM_RIGHTParserRuleCall_2_3());
			}
			ruleCONTAINER_DELIM_RIGHT
			{
				afterParserOrEnumRuleCall();
			}
		)?
		(
			{
				newCompositeNode(grammarAccess.getModelQueryModelContentsAccess().getSUBJECT_DELIM_LEFTParserRuleCall_3_0());
			}
			ruleSUBJECT_DELIM_LEFT
			{
				afterParserOrEnumRuleCall();
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelQueryModelContentsAccess().getDiffParametersPropertiesParserRuleCall_3_1_0());
					}
					lv_diffParameters_8_0=ruleProperties
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelQueryModelContentsRule());
						}
						add(
							$current,
							"diffParameters",
							lv_diffParameters_8_0,
							"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.Properties");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				{
					newCompositeNode(grammarAccess.getModelQueryModelContentsAccess().getELEM_SEPARATORParserRuleCall_3_2_0());
				}
				ruleELEM_SEPARATOR
				{
					afterParserOrEnumRuleCall();
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getModelQueryModelContentsAccess().getDiffParametersPropertiesParserRuleCall_3_2_1_0());
						}
						lv_diffParameters_10_0=ruleProperties
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelQueryModelContentsRule());
							}
							add(
								$current,
								"diffParameters",
								lv_diffParameters_10_0,
								"geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.Properties");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			{
				newCompositeNode(grammarAccess.getModelQueryModelContentsAccess().getSUBJECT_DELIM_RIGHTParserRuleCall_3_3());
			}
			ruleSUBJECT_DELIM_RIGHT
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleProperties
entryRuleProperties returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPropertiesRule()); }
	iv_ruleProperties=ruleProperties
	{ $current=$iv_ruleProperties.current.getText(); }
	EOF;

// Rule Properties
ruleProperties returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPropertiesAccess().getEStringParserRuleCall_0());
		}
		this_EString_0=ruleEString
		{
			$current.merge(this_EString_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			{
				newCompositeNode(grammarAccess.getPropertiesAccess().getPARAM_SUBPROPParserRuleCall_1_0());
			}
			this_PARAM_SUBPROP_1=rulePARAM_SUBPROP
			{
				$current.merge(this_PARAM_SUBPROP_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
			{
				newCompositeNode(grammarAccess.getPropertiesAccess().getEStringParserRuleCall_1_1());
			}
			this_EString_2=ruleEString
			{
				$current.merge(this_EString_2);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleCONTAINER_DELIM_LEFT
entryRuleCONTAINER_DELIM_LEFT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCONTAINER_DELIM_LEFTRule()); }
	iv_ruleCONTAINER_DELIM_LEFT=ruleCONTAINER_DELIM_LEFT
	{ $current=$iv_ruleCONTAINER_DELIM_LEFT.current.getText(); }
	EOF;

// Rule CONTAINER_DELIM_LEFT
ruleCONTAINER_DELIM_LEFT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='{'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getCONTAINER_DELIM_LEFTAccess().getLeftCurlyBracketKeyword());
	}
;

// Entry rule entryRuleCONTAINER_DELIM_RIGHT
entryRuleCONTAINER_DELIM_RIGHT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCONTAINER_DELIM_RIGHTRule()); }
	iv_ruleCONTAINER_DELIM_RIGHT=ruleCONTAINER_DELIM_RIGHT
	{ $current=$iv_ruleCONTAINER_DELIM_RIGHT.current.getText(); }
	EOF;

// Rule CONTAINER_DELIM_RIGHT
ruleCONTAINER_DELIM_RIGHT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='}'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getCONTAINER_DELIM_RIGHTAccess().getRightCurlyBracketKeyword());
	}
;

// Entry rule entryRuleSUBJECT_DELIM_LEFT
entryRuleSUBJECT_DELIM_LEFT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSUBJECT_DELIM_LEFTRule()); }
	iv_ruleSUBJECT_DELIM_LEFT=ruleSUBJECT_DELIM_LEFT
	{ $current=$iv_ruleSUBJECT_DELIM_LEFT.current.getText(); }
	EOF;

// Rule SUBJECT_DELIM_LEFT
ruleSUBJECT_DELIM_LEFT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='['
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getSUBJECT_DELIM_LEFTAccess().getLeftSquareBracketKeyword());
	}
;

// Entry rule entryRuleSUBJECT_DELIM_RIGHT
entryRuleSUBJECT_DELIM_RIGHT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSUBJECT_DELIM_RIGHTRule()); }
	iv_ruleSUBJECT_DELIM_RIGHT=ruleSUBJECT_DELIM_RIGHT
	{ $current=$iv_ruleSUBJECT_DELIM_RIGHT.current.getText(); }
	EOF;

// Rule SUBJECT_DELIM_RIGHT
ruleSUBJECT_DELIM_RIGHT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=']'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getSUBJECT_DELIM_RIGHTAccess().getRightSquareBracketKeyword());
	}
;

// Entry rule entryRuleELEM_SEPARATOR
entryRuleELEM_SEPARATOR returns [String current=null]:
	{ newCompositeNode(grammarAccess.getELEM_SEPARATORRule()); }
	iv_ruleELEM_SEPARATOR=ruleELEM_SEPARATOR
	{ $current=$iv_ruleELEM_SEPARATOR.current.getText(); }
	EOF;

// Rule ELEM_SEPARATOR
ruleELEM_SEPARATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=','
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getELEM_SEPARATORAccess().getCommaKeyword());
	}
;

// Entry rule entryRuleQUERY_END
entryRuleQUERY_END returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQUERY_ENDRule()); }
	iv_ruleQUERY_END=ruleQUERY_END
	{ $current=$iv_ruleQUERY_END.current.getText(); }
	EOF;

// Rule QUERY_END
ruleQUERY_END returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='?'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getQUERY_ENDAccess().getQuestionMarkKeyword());
	}
;

// Entry rule entryRulePARAM_EQ
entryRulePARAM_EQ returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPARAM_EQRule()); }
	iv_rulePARAM_EQ=rulePARAM_EQ
	{ $current=$iv_rulePARAM_EQ.current.getText(); }
	EOF;

// Rule PARAM_EQ
rulePARAM_EQ returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='='
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getPARAM_EQAccess().getEqualsSignKeyword());
	}
;

// Entry rule entryRulePARAM_LT
entryRulePARAM_LT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPARAM_LTRule()); }
	iv_rulePARAM_LT=rulePARAM_LT
	{ $current=$iv_rulePARAM_LT.current.getText(); }
	EOF;

// Rule PARAM_LT
rulePARAM_LT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='<'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getPARAM_LTAccess().getLessThanSignKeyword());
	}
;

// Entry rule entryRulePARAM_GT
entryRulePARAM_GT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPARAM_GTRule()); }
	iv_rulePARAM_GT=rulePARAM_GT
	{ $current=$iv_rulePARAM_GT.current.getText(); }
	EOF;

// Rule PARAM_GT
rulePARAM_GT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='>'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getPARAM_GTAccess().getGreaterThanSignKeyword());
	}
;

// Entry rule entryRulePARAM_NE
entryRulePARAM_NE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPARAM_NERule()); }
	iv_rulePARAM_NE=rulePARAM_NE
	{ $current=$iv_rulePARAM_NE.current.getText(); }
	EOF;

// Rule PARAM_NE
rulePARAM_NE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='!='
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getPARAM_NEAccess().getExclamationMarkEqualsSignKeyword());
	}
;

// Entry rule entryRulePARAM_SUBPROP
entryRulePARAM_SUBPROP returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPARAM_SUBPROPRule()); }
	iv_rulePARAM_SUBPROP=rulePARAM_SUBPROP
	{ $current=$iv_rulePARAM_SUBPROP.current.getText(); }
	EOF;

// Rule PARAM_SUBPROP
rulePARAM_SUBPROP returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='.'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getPARAM_SUBPROPAccess().getFullStopKeyword());
	}
;

// Rule Operator
ruleOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='WHO'
			{
				$current = grammarAccess.getOperatorAccess().getWHOEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getOperatorAccess().getWHOEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='WHEN'
			{
				$current = grammarAccess.getOperatorAccess().getWHENEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getOperatorAccess().getWHENEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='WHAT'
			{
				$current = grammarAccess.getOperatorAccess().getWHATEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getOperatorAccess().getWHATEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='WHERE'
			{
				$current = grammarAccess.getOperatorAccess().getWHEREEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getOperatorAccess().getWHEREEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule WhereSyn
ruleWhereSyn returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		enumLiteral_0='DESCRIPTION'
		{
			$current = grammarAccess.getWhereSynAccess().getWHEREEnumLiteralDeclaration().getEnumLiteral().getInstance();
			newLeafNode(enumLiteral_0, grammarAccess.getWhereSynAccess().getWHEREEnumLiteralDeclaration());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
