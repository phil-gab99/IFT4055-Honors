/*
 * generated by Xtext 2.28.0
 */
package geodes.sms.modelquerylanguage.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class ModelQueryLanguageTextualGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class QueryFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.QueryFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cQueryFileAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cQueriesAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Alternatives cQueriesAlternatives_1_0_0 = (Alternatives)cQueriesAssignment_1_0.eContents().get(0);
		private final RuleCall cQueriesModelQueryHeadParentParserRuleCall_1_0_0_0 = (RuleCall)cQueriesAlternatives_1_0_0.eContents().get(0);
		private final RuleCall cQueriesModelQueryNextFromToParserRuleCall_1_0_0_1 = (RuleCall)cQueriesAlternatives_1_0_0.eContents().get(1);
		private final RuleCall cQueriesModelQueryModelParserRuleCall_1_0_0_2 = (RuleCall)cQueriesAlternatives_1_0_0.eContents().get(2);
		private final RuleCall cQueriesModelQueryModelContentsParserRuleCall_1_0_0_3 = (RuleCall)cQueriesAlternatives_1_0_0.eContents().get(3);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final RuleCall cELEM_SEPARATORParserRuleCall_1_1_0 = (RuleCall)cGroup_1_1.eContents().get(0);
		private final Assignment cQueriesAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final Alternatives cQueriesAlternatives_1_1_1_0 = (Alternatives)cQueriesAssignment_1_1_1.eContents().get(0);
		private final RuleCall cQueriesModelQueryHeadParentParserRuleCall_1_1_1_0_0 = (RuleCall)cQueriesAlternatives_1_1_1_0.eContents().get(0);
		private final RuleCall cQueriesModelQueryNextFromToParserRuleCall_1_1_1_0_1 = (RuleCall)cQueriesAlternatives_1_1_1_0.eContents().get(1);
		private final RuleCall cQueriesModelQueryModelParserRuleCall_1_1_1_0_2 = (RuleCall)cQueriesAlternatives_1_1_1_0.eContents().get(2);
		private final RuleCall cQueriesModelQueryModelContentsParserRuleCall_1_1_1_0_3 = (RuleCall)cQueriesAlternatives_1_1_1_0.eContents().get(3);
		private final RuleCall cQUERY_ENDParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		
		//QueryFile returns QueryFile:
		//    {QueryFile} (
		//        queries+=(ModelQueryHeadParent
		//            | ModelQueryNextFromTo
		//            | ModelQueryModel
		//            | ModelQueryModelContents
		//        )
		//        (ELEM_SEPARATOR queries+=(ModelQueryHeadParent
		//            | ModelQueryNextFromTo
		//            | ModelQueryModel
		//            | ModelQueryModelContents
		//        ))*
		//        QUERY_END
		//    )?;
		@Override public ParserRule getRule() { return rule; }
		
		//{QueryFile} (
		//    queries+=(ModelQueryHeadParent
		//        | ModelQueryNextFromTo
		//        | ModelQueryModel
		//        | ModelQueryModelContents
		//    )
		//    (ELEM_SEPARATOR queries+=(ModelQueryHeadParent
		//        | ModelQueryNextFromTo
		//        | ModelQueryModel
		//        | ModelQueryModelContents
		//    ))*
		//    QUERY_END
		//)?
		public Group getGroup() { return cGroup; }
		
		//{QueryFile}
		public Action getQueryFileAction_0() { return cQueryFileAction_0; }
		
		//(
		//       queries+=(ModelQueryHeadParent
		//           | ModelQueryNextFromTo
		//           | ModelQueryModel
		//           | ModelQueryModelContents
		//       )
		//       (ELEM_SEPARATOR queries+=(ModelQueryHeadParent
		//           | ModelQueryNextFromTo
		//           | ModelQueryModel
		//           | ModelQueryModelContents
		//       ))*
		//       QUERY_END
		//   )?
		public Group getGroup_1() { return cGroup_1; }
		
		//queries+=(ModelQueryHeadParent
		//    | ModelQueryNextFromTo
		//    | ModelQueryModel
		//    | ModelQueryModelContents
		//)
		public Assignment getQueriesAssignment_1_0() { return cQueriesAssignment_1_0; }
		
		//(ModelQueryHeadParent
		//            | ModelQueryNextFromTo
		//            | ModelQueryModel
		//            | ModelQueryModelContents
		//        )
		public Alternatives getQueriesAlternatives_1_0_0() { return cQueriesAlternatives_1_0_0; }
		
		//ModelQueryHeadParent
		public RuleCall getQueriesModelQueryHeadParentParserRuleCall_1_0_0_0() { return cQueriesModelQueryHeadParentParserRuleCall_1_0_0_0; }
		
		//ModelQueryNextFromTo
		public RuleCall getQueriesModelQueryNextFromToParserRuleCall_1_0_0_1() { return cQueriesModelQueryNextFromToParserRuleCall_1_0_0_1; }
		
		//ModelQueryModel
		public RuleCall getQueriesModelQueryModelParserRuleCall_1_0_0_2() { return cQueriesModelQueryModelParserRuleCall_1_0_0_2; }
		
		//ModelQueryModelContents
		public RuleCall getQueriesModelQueryModelContentsParserRuleCall_1_0_0_3() { return cQueriesModelQueryModelContentsParserRuleCall_1_0_0_3; }
		
		//(ELEM_SEPARATOR queries+=(ModelQueryHeadParent
		//    | ModelQueryNextFromTo
		//    | ModelQueryModel
		//    | ModelQueryModelContents
		//))*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//ELEM_SEPARATOR
		public RuleCall getELEM_SEPARATORParserRuleCall_1_1_0() { return cELEM_SEPARATORParserRuleCall_1_1_0; }
		
		//queries+=(ModelQueryHeadParent
		//           | ModelQueryNextFromTo
		//           | ModelQueryModel
		//           | ModelQueryModelContents
		//       )
		public Assignment getQueriesAssignment_1_1_1() { return cQueriesAssignment_1_1_1; }
		
		//(ModelQueryHeadParent
		//            | ModelQueryNextFromTo
		//            | ModelQueryModel
		//            | ModelQueryModelContents
		//        )
		public Alternatives getQueriesAlternatives_1_1_1_0() { return cQueriesAlternatives_1_1_1_0; }
		
		//ModelQueryHeadParent
		public RuleCall getQueriesModelQueryHeadParentParserRuleCall_1_1_1_0_0() { return cQueriesModelQueryHeadParentParserRuleCall_1_1_1_0_0; }
		
		//ModelQueryNextFromTo
		public RuleCall getQueriesModelQueryNextFromToParserRuleCall_1_1_1_0_1() { return cQueriesModelQueryNextFromToParserRuleCall_1_1_1_0_1; }
		
		//ModelQueryModel
		public RuleCall getQueriesModelQueryModelParserRuleCall_1_1_1_0_2() { return cQueriesModelQueryModelParserRuleCall_1_1_1_0_2; }
		
		//ModelQueryModelContents
		public RuleCall getQueriesModelQueryModelContentsParserRuleCall_1_1_1_0_3() { return cQueriesModelQueryModelContentsParserRuleCall_1_1_1_0_3; }
		
		//QUERY_END
		public RuleCall getQUERY_ENDParserRuleCall_1_2() { return cQUERY_ENDParserRuleCall_1_2; }
	}
	public class ModelQueryHeadParentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ModelQueryHeadParent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOperatorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cOperatorAlternatives_0_0 = (Alternatives)cOperatorAssignment_0.eContents().get(0);
		private final RuleCall cOperatorOperatorEnumRuleCall_0_0_0 = (RuleCall)cOperatorAlternatives_0_0.eContents().get(0);
		private final RuleCall cOperatorWhereSynEnumRuleCall_0_0_1 = (RuleCall)cOperatorAlternatives_0_0.eContents().get(1);
		private final Assignment cSubjectAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cSubjectAlternatives_1_0 = (Alternatives)cSubjectAssignment_1.eContents().get(0);
		private final Keyword cSubjectHeadKeyword_1_0_0 = (Keyword)cSubjectAlternatives_1_0.eContents().get(0);
		private final Keyword cSubjectParentKeyword_1_0_1 = (Keyword)cSubjectAlternatives_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cCONTAINER_DELIM_LEFTParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cContainerParametersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cContainerParametersBranchParameterParserRuleCall_2_1_0 = (RuleCall)cContainerParametersAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final RuleCall cELEM_SEPARATORParserRuleCall_2_2_0 = (RuleCall)cGroup_2_2.eContents().get(0);
		private final Assignment cContainerParametersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cContainerParametersBranchParameterParserRuleCall_2_2_1_0 = (RuleCall)cContainerParametersAssignment_2_2_1.eContents().get(0);
		private final RuleCall cCONTAINER_DELIM_RIGHTParserRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		
		//ModelQueryHeadParent returns ModelQuery:
		//     operator=(Operator | WhereSyn)
		//     subject=("head" | "parent") (
		//         CONTAINER_DELIM_LEFT
		//         containerParameters+=BranchParameter
		//         (ELEM_SEPARATOR containerParameters+=BranchParameter)*
		//         CONTAINER_DELIM_RIGHT
		//     )?;
		@Override public ParserRule getRule() { return rule; }
		
		//operator=(Operator | WhereSyn)
		//subject=("head" | "parent") (
		//    CONTAINER_DELIM_LEFT
		//    containerParameters+=BranchParameter
		//    (ELEM_SEPARATOR containerParameters+=BranchParameter)*
		//    CONTAINER_DELIM_RIGHT
		//)?
		public Group getGroup() { return cGroup; }
		
		//operator=(Operator | WhereSyn)
		public Assignment getOperatorAssignment_0() { return cOperatorAssignment_0; }
		
		//(Operator | WhereSyn)
		public Alternatives getOperatorAlternatives_0_0() { return cOperatorAlternatives_0_0; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_0_0_0() { return cOperatorOperatorEnumRuleCall_0_0_0; }
		
		//WhereSyn
		public RuleCall getOperatorWhereSynEnumRuleCall_0_0_1() { return cOperatorWhereSynEnumRuleCall_0_0_1; }
		
		//subject=("head" | "parent")
		public Assignment getSubjectAssignment_1() { return cSubjectAssignment_1; }
		
		//("head" | "parent")
		public Alternatives getSubjectAlternatives_1_0() { return cSubjectAlternatives_1_0; }
		
		//"head"
		public Keyword getSubjectHeadKeyword_1_0_0() { return cSubjectHeadKeyword_1_0_0; }
		
		//"parent"
		public Keyword getSubjectParentKeyword_1_0_1() { return cSubjectParentKeyword_1_0_1; }
		
		//(
		//        CONTAINER_DELIM_LEFT
		//        containerParameters+=BranchParameter
		//        (ELEM_SEPARATOR containerParameters+=BranchParameter)*
		//        CONTAINER_DELIM_RIGHT
		//    )?
		public Group getGroup_2() { return cGroup_2; }
		
		//CONTAINER_DELIM_LEFT
		public RuleCall getCONTAINER_DELIM_LEFTParserRuleCall_2_0() { return cCONTAINER_DELIM_LEFTParserRuleCall_2_0; }
		
		//containerParameters+=BranchParameter
		public Assignment getContainerParametersAssignment_2_1() { return cContainerParametersAssignment_2_1; }
		
		//BranchParameter
		public RuleCall getContainerParametersBranchParameterParserRuleCall_2_1_0() { return cContainerParametersBranchParameterParserRuleCall_2_1_0; }
		
		//(ELEM_SEPARATOR containerParameters+=BranchParameter)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//ELEM_SEPARATOR
		public RuleCall getELEM_SEPARATORParserRuleCall_2_2_0() { return cELEM_SEPARATORParserRuleCall_2_2_0; }
		
		//containerParameters+=BranchParameter
		public Assignment getContainerParametersAssignment_2_2_1() { return cContainerParametersAssignment_2_2_1; }
		
		//BranchParameter
		public RuleCall getContainerParametersBranchParameterParserRuleCall_2_2_1_0() { return cContainerParametersBranchParameterParserRuleCall_2_2_1_0; }
		
		//CONTAINER_DELIM_RIGHT
		public RuleCall getCONTAINER_DELIM_RIGHTParserRuleCall_2_3() { return cCONTAINER_DELIM_RIGHTParserRuleCall_2_3; }
	}
	public class BranchParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.BranchParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cBranchNameKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cActiveKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cPARAM_EQParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cPARAM_GTParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		private final RuleCall cPARAM_LTParserRuleCall_1_2 = (RuleCall)cAlternatives_1.eContents().get(2);
		private final RuleCall cPARAM_NEParserRuleCall_1_3 = (RuleCall)cAlternatives_1.eContents().get(3);
		private final RuleCall cEStringParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//BranchParameter returns ecore::EString:
		//    ("branchName" | "active")
		//    (PARAM_EQ | PARAM_GT | PARAM_LT | PARAM_NE)
		//    EString;
		@Override public ParserRule getRule() { return rule; }
		
		//("branchName" | "active")
		//(PARAM_EQ | PARAM_GT | PARAM_LT | PARAM_NE)
		//EString
		public Group getGroup() { return cGroup; }
		
		//("branchName" | "active")
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//"branchName"
		public Keyword getBranchNameKeyword_0_0() { return cBranchNameKeyword_0_0; }
		
		//"active"
		public Keyword getActiveKeyword_0_1() { return cActiveKeyword_0_1; }
		
		//(PARAM_EQ | PARAM_GT | PARAM_LT | PARAM_NE)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//PARAM_EQ
		public RuleCall getPARAM_EQParserRuleCall_1_0() { return cPARAM_EQParserRuleCall_1_0; }
		
		//PARAM_GT
		public RuleCall getPARAM_GTParserRuleCall_1_1() { return cPARAM_GTParserRuleCall_1_1; }
		
		//PARAM_LT
		public RuleCall getPARAM_LTParserRuleCall_1_2() { return cPARAM_LTParserRuleCall_1_2; }
		
		//PARAM_NE
		public RuleCall getPARAM_NEParserRuleCall_1_3() { return cPARAM_NEParserRuleCall_1_3; }
		
		//EString
		public RuleCall getEStringParserRuleCall_2() { return cEStringParserRuleCall_2; }
	}
	public class ModelQueryNextFromToElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ModelQueryNextFromTo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOperatorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cOperatorAlternatives_0_0 = (Alternatives)cOperatorAssignment_0.eContents().get(0);
		private final RuleCall cOperatorOperatorEnumRuleCall_0_0_0 = (RuleCall)cOperatorAlternatives_0_0.eContents().get(0);
		private final RuleCall cOperatorWhereSynEnumRuleCall_0_0_1 = (RuleCall)cOperatorAlternatives_0_0.eContents().get(1);
		private final Assignment cSubjectAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cSubjectAlternatives_1_0 = (Alternatives)cSubjectAssignment_1.eContents().get(0);
		private final Keyword cSubjectNextKeyword_1_0_0 = (Keyword)cSubjectAlternatives_1_0.eContents().get(0);
		private final Keyword cSubjectFromKeyword_1_0_1 = (Keyword)cSubjectAlternatives_1_0.eContents().get(1);
		private final Keyword cSubjectToKeyword_1_0_2 = (Keyword)cSubjectAlternatives_1_0.eContents().get(2);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cCONTAINER_DELIM_LEFTParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cContainerParametersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cContainerParametersCommitParameterParserRuleCall_2_1_0 = (RuleCall)cContainerParametersAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final RuleCall cELEM_SEPARATORParserRuleCall_2_2_0 = (RuleCall)cGroup_2_2.eContents().get(0);
		private final Assignment cContainerParametersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cContainerParametersCommitParameterParserRuleCall_2_2_1_0 = (RuleCall)cContainerParametersAssignment_2_2_1.eContents().get(0);
		private final RuleCall cCONTAINER_DELIM_RIGHTParserRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		
		//ModelQueryNextFromTo returns ModelQuery:
		//     operator=(Operator | WhereSyn)
		//     subject=("next" | "from" | "to") (
		//         CONTAINER_DELIM_LEFT
		//         containerParameters+=CommitParameter
		//         (ELEM_SEPARATOR containerParameters+=CommitParameter)*
		//         CONTAINER_DELIM_RIGHT
		//     )?;
		@Override public ParserRule getRule() { return rule; }
		
		//operator=(Operator | WhereSyn)
		//subject=("next" | "from" | "to") (
		//    CONTAINER_DELIM_LEFT
		//    containerParameters+=CommitParameter
		//    (ELEM_SEPARATOR containerParameters+=CommitParameter)*
		//    CONTAINER_DELIM_RIGHT
		//)?
		public Group getGroup() { return cGroup; }
		
		//operator=(Operator | WhereSyn)
		public Assignment getOperatorAssignment_0() { return cOperatorAssignment_0; }
		
		//(Operator | WhereSyn)
		public Alternatives getOperatorAlternatives_0_0() { return cOperatorAlternatives_0_0; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_0_0_0() { return cOperatorOperatorEnumRuleCall_0_0_0; }
		
		//WhereSyn
		public RuleCall getOperatorWhereSynEnumRuleCall_0_0_1() { return cOperatorWhereSynEnumRuleCall_0_0_1; }
		
		//subject=("next" | "from" | "to")
		public Assignment getSubjectAssignment_1() { return cSubjectAssignment_1; }
		
		//("next" | "from" | "to")
		public Alternatives getSubjectAlternatives_1_0() { return cSubjectAlternatives_1_0; }
		
		//"next"
		public Keyword getSubjectNextKeyword_1_0_0() { return cSubjectNextKeyword_1_0_0; }
		
		//"from"
		public Keyword getSubjectFromKeyword_1_0_1() { return cSubjectFromKeyword_1_0_1; }
		
		//"to"
		public Keyword getSubjectToKeyword_1_0_2() { return cSubjectToKeyword_1_0_2; }
		
		//(
		//        CONTAINER_DELIM_LEFT
		//        containerParameters+=CommitParameter
		//        (ELEM_SEPARATOR containerParameters+=CommitParameter)*
		//        CONTAINER_DELIM_RIGHT
		//    )?
		public Group getGroup_2() { return cGroup_2; }
		
		//CONTAINER_DELIM_LEFT
		public RuleCall getCONTAINER_DELIM_LEFTParserRuleCall_2_0() { return cCONTAINER_DELIM_LEFTParserRuleCall_2_0; }
		
		//containerParameters+=CommitParameter
		public Assignment getContainerParametersAssignment_2_1() { return cContainerParametersAssignment_2_1; }
		
		//CommitParameter
		public RuleCall getContainerParametersCommitParameterParserRuleCall_2_1_0() { return cContainerParametersCommitParameterParserRuleCall_2_1_0; }
		
		//(ELEM_SEPARATOR containerParameters+=CommitParameter)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//ELEM_SEPARATOR
		public RuleCall getELEM_SEPARATORParserRuleCall_2_2_0() { return cELEM_SEPARATORParserRuleCall_2_2_0; }
		
		//containerParameters+=CommitParameter
		public Assignment getContainerParametersAssignment_2_2_1() { return cContainerParametersAssignment_2_2_1; }
		
		//CommitParameter
		public RuleCall getContainerParametersCommitParameterParserRuleCall_2_2_1_0() { return cContainerParametersCommitParameterParserRuleCall_2_2_1_0; }
		
		//CONTAINER_DELIM_RIGHT
		public RuleCall getCONTAINER_DELIM_RIGHTParserRuleCall_2_3() { return cCONTAINER_DELIM_RIGHTParserRuleCall_2_3; }
	}
	public class CommitParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.CommitParameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cHashKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cAuthorKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cMessageKeyword_0_2 = (Keyword)cAlternatives_0.eContents().get(2);
		private final Keyword cTimestampKeyword_0_3 = (Keyword)cAlternatives_0.eContents().get(3);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cPARAM_EQParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cPARAM_GTParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		private final RuleCall cPARAM_LTParserRuleCall_1_2 = (RuleCall)cAlternatives_1.eContents().get(2);
		private final RuleCall cPARAM_NEParserRuleCall_1_3 = (RuleCall)cAlternatives_1.eContents().get(3);
		private final RuleCall cEStringParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//CommitParameter returns ecore::EString:
		//    ("hash" | "author" | "message" | "timestamp")
		//    (PARAM_EQ | PARAM_GT | PARAM_LT | PARAM_NE)
		//    EString;
		@Override public ParserRule getRule() { return rule; }
		
		//("hash" | "author" | "message" | "timestamp")
		//(PARAM_EQ | PARAM_GT | PARAM_LT | PARAM_NE)
		//EString
		public Group getGroup() { return cGroup; }
		
		//("hash" | "author" | "message" | "timestamp")
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//"hash"
		public Keyword getHashKeyword_0_0() { return cHashKeyword_0_0; }
		
		//"author"
		public Keyword getAuthorKeyword_0_1() { return cAuthorKeyword_0_1; }
		
		//"message"
		public Keyword getMessageKeyword_0_2() { return cMessageKeyword_0_2; }
		
		//"timestamp"
		public Keyword getTimestampKeyword_0_3() { return cTimestampKeyword_0_3; }
		
		//(PARAM_EQ | PARAM_GT | PARAM_LT | PARAM_NE)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//PARAM_EQ
		public RuleCall getPARAM_EQParserRuleCall_1_0() { return cPARAM_EQParserRuleCall_1_0; }
		
		//PARAM_GT
		public RuleCall getPARAM_GTParserRuleCall_1_1() { return cPARAM_GTParserRuleCall_1_1; }
		
		//PARAM_LT
		public RuleCall getPARAM_LTParserRuleCall_1_2() { return cPARAM_LTParserRuleCall_1_2; }
		
		//PARAM_NE
		public RuleCall getPARAM_NEParserRuleCall_1_3() { return cPARAM_NEParserRuleCall_1_3; }
		
		//EString
		public RuleCall getEStringParserRuleCall_2() { return cEStringParserRuleCall_2; }
	}
	public class ModelQueryModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ModelQueryModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOperatorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cOperatorAlternatives_0_0 = (Alternatives)cOperatorAssignment_0.eContents().get(0);
		private final RuleCall cOperatorOperatorEnumRuleCall_0_0_0 = (RuleCall)cOperatorAlternatives_0_0.eContents().get(0);
		private final RuleCall cOperatorWhereSynEnumRuleCall_0_0_1 = (RuleCall)cOperatorAlternatives_0_0.eContents().get(1);
		private final Assignment cSubjectAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cSubjectModelKeyword_1_0 = (Keyword)cSubjectAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cCONTAINER_DELIM_LEFTParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cContainerParametersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cContainerParametersModelParamaterParserRuleCall_2_1_0 = (RuleCall)cContainerParametersAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final RuleCall cELEM_SEPARATORParserRuleCall_2_2_0 = (RuleCall)cGroup_2_2.eContents().get(0);
		private final Assignment cContainerParametersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cContainerParametersModelParamaterParserRuleCall_2_2_1_0 = (RuleCall)cContainerParametersAssignment_2_2_1.eContents().get(0);
		private final RuleCall cCONTAINER_DELIM_RIGHTParserRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		
		//ModelQueryModel returns ModelQuery:
		//     operator=(Operator | WhereSyn)
		//     subject="model" (
		//         CONTAINER_DELIM_LEFT
		//         containerParameters+=ModelParamater
		//         (ELEM_SEPARATOR containerParameters+=ModelParamater)*
		//         CONTAINER_DELIM_RIGHT
		//     )?;
		@Override public ParserRule getRule() { return rule; }
		
		//operator=(Operator | WhereSyn)
		//subject="model" (
		//    CONTAINER_DELIM_LEFT
		//    containerParameters+=ModelParamater
		//    (ELEM_SEPARATOR containerParameters+=ModelParamater)*
		//    CONTAINER_DELIM_RIGHT
		//)?
		public Group getGroup() { return cGroup; }
		
		//operator=(Operator | WhereSyn)
		public Assignment getOperatorAssignment_0() { return cOperatorAssignment_0; }
		
		//(Operator | WhereSyn)
		public Alternatives getOperatorAlternatives_0_0() { return cOperatorAlternatives_0_0; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_0_0_0() { return cOperatorOperatorEnumRuleCall_0_0_0; }
		
		//WhereSyn
		public RuleCall getOperatorWhereSynEnumRuleCall_0_0_1() { return cOperatorWhereSynEnumRuleCall_0_0_1; }
		
		//subject="model"
		public Assignment getSubjectAssignment_1() { return cSubjectAssignment_1; }
		
		//"model"
		public Keyword getSubjectModelKeyword_1_0() { return cSubjectModelKeyword_1_0; }
		
		//(
		//        CONTAINER_DELIM_LEFT
		//        containerParameters+=ModelParamater
		//        (ELEM_SEPARATOR containerParameters+=ModelParamater)*
		//        CONTAINER_DELIM_RIGHT
		//    )?
		public Group getGroup_2() { return cGroup_2; }
		
		//CONTAINER_DELIM_LEFT
		public RuleCall getCONTAINER_DELIM_LEFTParserRuleCall_2_0() { return cCONTAINER_DELIM_LEFTParserRuleCall_2_0; }
		
		//containerParameters+=ModelParamater
		public Assignment getContainerParametersAssignment_2_1() { return cContainerParametersAssignment_2_1; }
		
		//ModelParamater
		public RuleCall getContainerParametersModelParamaterParserRuleCall_2_1_0() { return cContainerParametersModelParamaterParserRuleCall_2_1_0; }
		
		//(ELEM_SEPARATOR containerParameters+=ModelParamater)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//ELEM_SEPARATOR
		public RuleCall getELEM_SEPARATORParserRuleCall_2_2_0() { return cELEM_SEPARATORParserRuleCall_2_2_0; }
		
		//containerParameters+=ModelParamater
		public Assignment getContainerParametersAssignment_2_2_1() { return cContainerParametersAssignment_2_2_1; }
		
		//ModelParamater
		public RuleCall getContainerParametersModelParamaterParserRuleCall_2_2_1_0() { return cContainerParametersModelParamaterParserRuleCall_2_2_1_0; }
		
		//CONTAINER_DELIM_RIGHT
		public RuleCall getCONTAINER_DELIM_RIGHTParserRuleCall_2_3() { return cCONTAINER_DELIM_RIGHTParserRuleCall_2_3; }
	}
	public class ModelParamaterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ModelParamater");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cModelIdKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cIsDeletedKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cOwnerKeyword_0_2 = (Keyword)cAlternatives_0.eContents().get(2);
		private final Keyword cCreationDateKeyword_0_3 = (Keyword)cAlternatives_0.eContents().get(3);
		private final Keyword cPathKeyword_0_4 = (Keyword)cAlternatives_0.eContents().get(4);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final RuleCall cPARAM_EQParserRuleCall_1_0 = (RuleCall)cAlternatives_1.eContents().get(0);
		private final RuleCall cPARAM_GTParserRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		private final RuleCall cPARAM_LTParserRuleCall_1_2 = (RuleCall)cAlternatives_1.eContents().get(2);
		private final RuleCall cPARAM_NEParserRuleCall_1_3 = (RuleCall)cAlternatives_1.eContents().get(3);
		private final RuleCall cEStringParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ModelParamater returns ecore::EString:
		//    ("modelId" | "isDeleted" | "owner" | "creationDate" | "path")
		//    (PARAM_EQ | PARAM_GT | PARAM_LT | PARAM_NE)
		//    EString;
		@Override public ParserRule getRule() { return rule; }
		
		//("modelId" | "isDeleted" | "owner" | "creationDate" | "path")
		//(PARAM_EQ | PARAM_GT | PARAM_LT | PARAM_NE)
		//EString
		public Group getGroup() { return cGroup; }
		
		//("modelId" | "isDeleted" | "owner" | "creationDate" | "path")
		public Alternatives getAlternatives_0() { return cAlternatives_0; }
		
		//"modelId"
		public Keyword getModelIdKeyword_0_0() { return cModelIdKeyword_0_0; }
		
		//"isDeleted"
		public Keyword getIsDeletedKeyword_0_1() { return cIsDeletedKeyword_0_1; }
		
		//"owner"
		public Keyword getOwnerKeyword_0_2() { return cOwnerKeyword_0_2; }
		
		//"creationDate"
		public Keyword getCreationDateKeyword_0_3() { return cCreationDateKeyword_0_3; }
		
		//"path"
		public Keyword getPathKeyword_0_4() { return cPathKeyword_0_4; }
		
		//(PARAM_EQ | PARAM_GT | PARAM_LT | PARAM_NE)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }
		
		//PARAM_EQ
		public RuleCall getPARAM_EQParserRuleCall_1_0() { return cPARAM_EQParserRuleCall_1_0; }
		
		//PARAM_GT
		public RuleCall getPARAM_GTParserRuleCall_1_1() { return cPARAM_GTParserRuleCall_1_1; }
		
		//PARAM_LT
		public RuleCall getPARAM_LTParserRuleCall_1_2() { return cPARAM_LTParserRuleCall_1_2; }
		
		//PARAM_NE
		public RuleCall getPARAM_NEParserRuleCall_1_3() { return cPARAM_NEParserRuleCall_1_3; }
		
		//EString
		public RuleCall getEStringParserRuleCall_2() { return cEStringParserRuleCall_2; }
	}
	public class ModelQueryModelContentsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ModelQueryModelContents");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOperatorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cOperatorAlternatives_0_0 = (Alternatives)cOperatorAssignment_0.eContents().get(0);
		private final RuleCall cOperatorOperatorEnumRuleCall_0_0_0 = (RuleCall)cOperatorAlternatives_0_0.eContents().get(0);
		private final RuleCall cOperatorWhereSynEnumRuleCall_0_0_1 = (RuleCall)cOperatorAlternatives_0_0.eContents().get(1);
		private final Assignment cSubjectAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cSubjectAlternatives_1_0 = (Alternatives)cSubjectAssignment_1.eContents().get(0);
		private final Keyword cSubjectChangedKeyword_1_0_0 = (Keyword)cSubjectAlternatives_1_0.eContents().get(0);
		private final Keyword cSubjectCreatedKeyword_1_0_1 = (Keyword)cSubjectAlternatives_1_0.eContents().get(1);
		private final Keyword cSubjectDeletedKeyword_1_0_2 = (Keyword)cSubjectAlternatives_1_0.eContents().get(2);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cCONTAINER_DELIM_LEFTParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cContainerParametersAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cContainerParametersCommitParameterParserRuleCall_2_1_0 = (RuleCall)cContainerParametersAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final RuleCall cELEM_SEPARATORParserRuleCall_2_2_0 = (RuleCall)cGroup_2_2.eContents().get(0);
		private final Assignment cContainerParametersAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cContainerParametersCommitParameterParserRuleCall_2_2_1_0 = (RuleCall)cContainerParametersAssignment_2_2_1.eContents().get(0);
		private final RuleCall cCONTAINER_DELIM_RIGHTParserRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cSUBJECT_DELIM_LEFTParserRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cDiffParametersAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDiffParametersPropertiesParserRuleCall_3_1_0 = (RuleCall)cDiffParametersAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final RuleCall cELEM_SEPARATORParserRuleCall_3_2_0 = (RuleCall)cGroup_3_2.eContents().get(0);
		private final Assignment cDiffParametersAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cDiffParametersPropertiesParserRuleCall_3_2_1_0 = (RuleCall)cDiffParametersAssignment_3_2_1.eContents().get(0);
		private final RuleCall cSUBJECT_DELIM_RIGHTParserRuleCall_3_3 = (RuleCall)cGroup_3.eContents().get(3);
		
		//ModelQueryModelContents returns ModelQuery:
		//     operator=(Operator | WhereSyn)
		//     subject=("changed" | "created" | "deleted") (
		//         CONTAINER_DELIM_LEFT
		//         containerParameters+=CommitParameter
		//         (ELEM_SEPARATOR containerParameters+=CommitParameter)*
		//         CONTAINER_DELIM_RIGHT
		//     )? (
		//         SUBJECT_DELIM_LEFT
		//         diffParameters+=Properties
		//         (ELEM_SEPARATOR diffParameters+=Properties)*
		//         SUBJECT_DELIM_RIGHT
		//     )?;
		@Override public ParserRule getRule() { return rule; }
		
		//operator=(Operator | WhereSyn)
		//subject=("changed" | "created" | "deleted") (
		//    CONTAINER_DELIM_LEFT
		//    containerParameters+=CommitParameter
		//    (ELEM_SEPARATOR containerParameters+=CommitParameter)*
		//    CONTAINER_DELIM_RIGHT
		//)? (
		//    SUBJECT_DELIM_LEFT
		//    diffParameters+=Properties
		//    (ELEM_SEPARATOR diffParameters+=Properties)*
		//    SUBJECT_DELIM_RIGHT
		//)?
		public Group getGroup() { return cGroup; }
		
		//operator=(Operator | WhereSyn)
		public Assignment getOperatorAssignment_0() { return cOperatorAssignment_0; }
		
		//(Operator | WhereSyn)
		public Alternatives getOperatorAlternatives_0_0() { return cOperatorAlternatives_0_0; }
		
		//Operator
		public RuleCall getOperatorOperatorEnumRuleCall_0_0_0() { return cOperatorOperatorEnumRuleCall_0_0_0; }
		
		//WhereSyn
		public RuleCall getOperatorWhereSynEnumRuleCall_0_0_1() { return cOperatorWhereSynEnumRuleCall_0_0_1; }
		
		//subject=("changed" | "created" | "deleted")
		public Assignment getSubjectAssignment_1() { return cSubjectAssignment_1; }
		
		//("changed" | "created" | "deleted")
		public Alternatives getSubjectAlternatives_1_0() { return cSubjectAlternatives_1_0; }
		
		//"changed"
		public Keyword getSubjectChangedKeyword_1_0_0() { return cSubjectChangedKeyword_1_0_0; }
		
		//"created"
		public Keyword getSubjectCreatedKeyword_1_0_1() { return cSubjectCreatedKeyword_1_0_1; }
		
		//"deleted"
		public Keyword getSubjectDeletedKeyword_1_0_2() { return cSubjectDeletedKeyword_1_0_2; }
		
		//(
		//        CONTAINER_DELIM_LEFT
		//        containerParameters+=CommitParameter
		//        (ELEM_SEPARATOR containerParameters+=CommitParameter)*
		//        CONTAINER_DELIM_RIGHT
		//    )?
		public Group getGroup_2() { return cGroup_2; }
		
		//CONTAINER_DELIM_LEFT
		public RuleCall getCONTAINER_DELIM_LEFTParserRuleCall_2_0() { return cCONTAINER_DELIM_LEFTParserRuleCall_2_0; }
		
		//containerParameters+=CommitParameter
		public Assignment getContainerParametersAssignment_2_1() { return cContainerParametersAssignment_2_1; }
		
		//CommitParameter
		public RuleCall getContainerParametersCommitParameterParserRuleCall_2_1_0() { return cContainerParametersCommitParameterParserRuleCall_2_1_0; }
		
		//(ELEM_SEPARATOR containerParameters+=CommitParameter)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//ELEM_SEPARATOR
		public RuleCall getELEM_SEPARATORParserRuleCall_2_2_0() { return cELEM_SEPARATORParserRuleCall_2_2_0; }
		
		//containerParameters+=CommitParameter
		public Assignment getContainerParametersAssignment_2_2_1() { return cContainerParametersAssignment_2_2_1; }
		
		//CommitParameter
		public RuleCall getContainerParametersCommitParameterParserRuleCall_2_2_1_0() { return cContainerParametersCommitParameterParserRuleCall_2_2_1_0; }
		
		//CONTAINER_DELIM_RIGHT
		public RuleCall getCONTAINER_DELIM_RIGHTParserRuleCall_2_3() { return cCONTAINER_DELIM_RIGHTParserRuleCall_2_3; }
		
		//(
		//        SUBJECT_DELIM_LEFT
		//        diffParameters+=Properties
		//        (ELEM_SEPARATOR diffParameters+=Properties)*
		//        SUBJECT_DELIM_RIGHT
		//    )?
		public Group getGroup_3() { return cGroup_3; }
		
		//SUBJECT_DELIM_LEFT
		public RuleCall getSUBJECT_DELIM_LEFTParserRuleCall_3_0() { return cSUBJECT_DELIM_LEFTParserRuleCall_3_0; }
		
		//diffParameters+=Properties
		public Assignment getDiffParametersAssignment_3_1() { return cDiffParametersAssignment_3_1; }
		
		//Properties
		public RuleCall getDiffParametersPropertiesParserRuleCall_3_1_0() { return cDiffParametersPropertiesParserRuleCall_3_1_0; }
		
		//(ELEM_SEPARATOR diffParameters+=Properties)*
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//ELEM_SEPARATOR
		public RuleCall getELEM_SEPARATORParserRuleCall_3_2_0() { return cELEM_SEPARATORParserRuleCall_3_2_0; }
		
		//diffParameters+=Properties
		public Assignment getDiffParametersAssignment_3_2_1() { return cDiffParametersAssignment_3_2_1; }
		
		//Properties
		public RuleCall getDiffParametersPropertiesParserRuleCall_3_2_1_0() { return cDiffParametersPropertiesParserRuleCall_3_2_1_0; }
		
		//SUBJECT_DELIM_RIGHT
		public RuleCall getSUBJECT_DELIM_RIGHTParserRuleCall_3_3() { return cSUBJECT_DELIM_RIGHTParserRuleCall_3_3; }
	}
	public class PropertiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.Properties");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cEStringParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cPARAM_SUBPROPParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final RuleCall cEStringParserRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//Properties returns ecore::EString:
		//    EString (PARAM_SUBPROP EString)*;
		@Override public ParserRule getRule() { return rule; }
		
		//EString (PARAM_SUBPROP EString)*
		public Group getGroup() { return cGroup; }
		
		//EString
		public RuleCall getEStringParserRuleCall_0() { return cEStringParserRuleCall_0; }
		
		//(PARAM_SUBPROP EString)*
		public Group getGroup_1() { return cGroup_1; }
		
		//PARAM_SUBPROP
		public RuleCall getPARAM_SUBPROPParserRuleCall_1_0() { return cPARAM_SUBPROPParserRuleCall_1_0; }
		
		//EString
		public RuleCall getEStringParserRuleCall_1_1() { return cEStringParserRuleCall_1_1; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class HEADElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.HEAD");
		private final Keyword cHeadKeyword = (Keyword)rule.eContents().get(1);
		
		//HEAD: "head";
		@Override public ParserRule getRule() { return rule; }
		
		//"head"
		public Keyword getHeadKeyword() { return cHeadKeyword; }
	}
	public class PARENTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.PARENT");
		private final Keyword cParentKeyword = (Keyword)rule.eContents().get(1);
		
		//PARENT: "parent";
		@Override public ParserRule getRule() { return rule; }
		
		//"parent"
		public Keyword getParentKeyword() { return cParentKeyword; }
	}
	public class NEXTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.NEXT");
		private final Keyword cNextKeyword = (Keyword)rule.eContents().get(1);
		
		//NEXT: "next";
		@Override public ParserRule getRule() { return rule; }
		
		//"next"
		public Keyword getNextKeyword() { return cNextKeyword; }
	}
	public class FROMElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.FROM");
		private final Keyword cFromKeyword = (Keyword)rule.eContents().get(1);
		
		//FROM: "from";
		@Override public ParserRule getRule() { return rule; }
		
		//"from"
		public Keyword getFromKeyword() { return cFromKeyword; }
	}
	public class TOElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.TO");
		private final Keyword cToKeyword = (Keyword)rule.eContents().get(1);
		
		//TO: "to";
		@Override public ParserRule getRule() { return rule; }
		
		//"to"
		public Keyword getToKeyword() { return cToKeyword; }
	}
	public class MODELElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.MODEL");
		private final Keyword cModelKeyword = (Keyword)rule.eContents().get(1);
		
		//MODEL: "model";
		@Override public ParserRule getRule() { return rule; }
		
		//"model"
		public Keyword getModelKeyword() { return cModelKeyword; }
	}
	public class CHANGEDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.CHANGED");
		private final Keyword cChangedKeyword = (Keyword)rule.eContents().get(1);
		
		//CHANGED: "changed";
		@Override public ParserRule getRule() { return rule; }
		
		//"changed"
		public Keyword getChangedKeyword() { return cChangedKeyword; }
	}
	public class CREATEDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.CREATED");
		private final Keyword cCreatedKeyword = (Keyword)rule.eContents().get(1);
		
		//CREATED: "created";
		@Override public ParserRule getRule() { return rule; }
		
		//"created"
		public Keyword getCreatedKeyword() { return cCreatedKeyword; }
	}
	public class DELETEDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.DELETED");
		private final Keyword cDeletedKeyword = (Keyword)rule.eContents().get(1);
		
		//DELETED: "deleted";
		@Override public ParserRule getRule() { return rule; }
		
		//"deleted"
		public Keyword getDeletedKeyword() { return cDeletedKeyword; }
	}
	public class CONTAINER_DELIM_LEFTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.CONTAINER_DELIM_LEFT");
		private final Keyword cLeftCurlyBracketKeyword = (Keyword)rule.eContents().get(1);
		
		//CONTAINER_DELIM_LEFT: "{";
		@Override public ParserRule getRule() { return rule; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword() { return cLeftCurlyBracketKeyword; }
	}
	public class CONTAINER_DELIM_RIGHTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.CONTAINER_DELIM_RIGHT");
		private final Keyword cRightCurlyBracketKeyword = (Keyword)rule.eContents().get(1);
		
		//CONTAINER_DELIM_RIGHT: "}";
		@Override public ParserRule getRule() { return rule; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword() { return cRightCurlyBracketKeyword; }
	}
	public class SUBJECT_DELIM_LEFTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.SUBJECT_DELIM_LEFT");
		private final Keyword cLeftSquareBracketKeyword = (Keyword)rule.eContents().get(1);
		
		//SUBJECT_DELIM_LEFT: "[";
		@Override public ParserRule getRule() { return rule; }
		
		//"["
		public Keyword getLeftSquareBracketKeyword() { return cLeftSquareBracketKeyword; }
	}
	public class SUBJECT_DELIM_RIGHTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.SUBJECT_DELIM_RIGHT");
		private final Keyword cRightSquareBracketKeyword = (Keyword)rule.eContents().get(1);
		
		//SUBJECT_DELIM_RIGHT: "]";
		@Override public ParserRule getRule() { return rule; }
		
		//"]"
		public Keyword getRightSquareBracketKeyword() { return cRightSquareBracketKeyword; }
	}
	public class ELEM_SEPARATORElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.ELEM_SEPARATOR");
		private final Keyword cCommaKeyword = (Keyword)rule.eContents().get(1);
		
		//ELEM_SEPARATOR: ",";
		@Override public ParserRule getRule() { return rule; }
		
		//","
		public Keyword getCommaKeyword() { return cCommaKeyword; }
	}
	public class QUERY_ENDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.QUERY_END");
		private final Keyword cQuestionMarkKeyword = (Keyword)rule.eContents().get(1);
		
		//QUERY_END: "?";
		@Override public ParserRule getRule() { return rule; }
		
		//"?"
		public Keyword getQuestionMarkKeyword() { return cQuestionMarkKeyword; }
	}
	public class BRANCH_NAMEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.BRANCH_NAME");
		private final Keyword cBranchNameKeyword = (Keyword)rule.eContents().get(1);
		
		//BRANCH_NAME: "branchName";
		@Override public ParserRule getRule() { return rule; }
		
		//"branchName"
		public Keyword getBranchNameKeyword() { return cBranchNameKeyword; }
	}
	public class PARAM_EQElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.PARAM_EQ");
		private final Keyword cEqualsSignKeyword = (Keyword)rule.eContents().get(1);
		
		//PARAM_EQ: "=";
		@Override public ParserRule getRule() { return rule; }
		
		//"="
		public Keyword getEqualsSignKeyword() { return cEqualsSignKeyword; }
	}
	public class PARAM_LTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.PARAM_LT");
		private final Keyword cLessThanSignKeyword = (Keyword)rule.eContents().get(1);
		
		//PARAM_LT: "<";
		@Override public ParserRule getRule() { return rule; }
		
		//"<"
		public Keyword getLessThanSignKeyword() { return cLessThanSignKeyword; }
	}
	public class PARAM_GTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.PARAM_GT");
		private final Keyword cGreaterThanSignKeyword = (Keyword)rule.eContents().get(1);
		
		//PARAM_GT: ">";
		@Override public ParserRule getRule() { return rule; }
		
		//">"
		public Keyword getGreaterThanSignKeyword() { return cGreaterThanSignKeyword; }
	}
	public class PARAM_NEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.PARAM_NE");
		private final Keyword cExclamationMarkEqualsSignKeyword = (Keyword)rule.eContents().get(1);
		
		//PARAM_NE: "!=";
		@Override public ParserRule getRule() { return rule; }
		
		//"!="
		public Keyword getExclamationMarkEqualsSignKeyword() { return cExclamationMarkEqualsSignKeyword; }
	}
	public class PARAM_SUBPROPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.PARAM_SUBPROP");
		private final Keyword cFullStopKeyword = (Keyword)rule.eContents().get(1);
		
		//PARAM_SUBPROP: ".";
		@Override public ParserRule getRule() { return rule; }
		
		//"."
		public Keyword getFullStopKeyword() { return cFullStopKeyword; }
	}
	
	public class OperatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.Operator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cWHOEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cWHOWHOKeyword_0_0 = (Keyword)cWHOEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cWHENEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cWHENWHENKeyword_1_0 = (Keyword)cWHENEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cWHATEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cWHATWHATKeyword_2_0 = (Keyword)cWHATEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cWHEREEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cWHEREWHEREKeyword_3_0 = (Keyword)cWHEREEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum Operator:
		//    WHO | WHEN | WHAT | WHERE;
		public EnumRule getRule() { return rule; }
		
		//WHO | WHEN | WHAT | WHERE
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//WHO
		public EnumLiteralDeclaration getWHOEnumLiteralDeclaration_0() { return cWHOEnumLiteralDeclaration_0; }
		
		public Keyword getWHOWHOKeyword_0_0() { return cWHOWHOKeyword_0_0; }
		
		//WHEN
		public EnumLiteralDeclaration getWHENEnumLiteralDeclaration_1() { return cWHENEnumLiteralDeclaration_1; }
		
		public Keyword getWHENWHENKeyword_1_0() { return cWHENWHENKeyword_1_0; }
		
		//WHAT
		public EnumLiteralDeclaration getWHATEnumLiteralDeclaration_2() { return cWHATEnumLiteralDeclaration_2; }
		
		public Keyword getWHATWHATKeyword_2_0() { return cWHATWHATKeyword_2_0; }
		
		//WHERE
		public EnumLiteralDeclaration getWHEREEnumLiteralDeclaration_3() { return cWHEREEnumLiteralDeclaration_3; }
		
		public Keyword getWHEREWHEREKeyword_3_0() { return cWHEREWHEREKeyword_3_0; }
	}
	public class WhereSynElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "geodes.sms.modelquerylanguage.ModelQueryLanguageTextual.WhereSyn");
		private final EnumLiteralDeclaration cWHEREEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cWHEREDESCRIPTIONKeyword_0 = (Keyword)cWHEREEnumLiteralDeclaration.eContents().get(0);
		
		//enum WhereSyn returns Operator:
		//    WHERE="DESCRIPTION";
		public EnumRule getRule() { return rule; }
		
		//WHERE="DESCRIPTION"
		public EnumLiteralDeclaration getWHEREEnumLiteralDeclaration() { return cWHEREEnumLiteralDeclaration; }
		
		//"DESCRIPTION"
		public Keyword getWHEREDESCRIPTIONKeyword_0() { return cWHEREDESCRIPTIONKeyword_0; }
	}
	
	private final QueryFileElements pQueryFile;
	private final ModelQueryHeadParentElements pModelQueryHeadParent;
	private final BranchParameterElements pBranchParameter;
	private final ModelQueryNextFromToElements pModelQueryNextFromTo;
	private final CommitParameterElements pCommitParameter;
	private final ModelQueryModelElements pModelQueryModel;
	private final ModelParamaterElements pModelParamater;
	private final ModelQueryModelContentsElements pModelQueryModelContents;
	private final PropertiesElements pProperties;
	private final OperatorElements eOperator;
	private final WhereSynElements eWhereSyn;
	private final EStringElements pEString;
	private final HEADElements pHEAD;
	private final PARENTElements pPARENT;
	private final NEXTElements pNEXT;
	private final FROMElements pFROM;
	private final TOElements pTO;
	private final MODELElements pMODEL;
	private final CHANGEDElements pCHANGED;
	private final CREATEDElements pCREATED;
	private final DELETEDElements pDELETED;
	private final CONTAINER_DELIM_LEFTElements pCONTAINER_DELIM_LEFT;
	private final CONTAINER_DELIM_RIGHTElements pCONTAINER_DELIM_RIGHT;
	private final SUBJECT_DELIM_LEFTElements pSUBJECT_DELIM_LEFT;
	private final SUBJECT_DELIM_RIGHTElements pSUBJECT_DELIM_RIGHT;
	private final ELEM_SEPARATORElements pELEM_SEPARATOR;
	private final QUERY_ENDElements pQUERY_END;
	private final BRANCH_NAMEElements pBRANCH_NAME;
	private final PARAM_EQElements pPARAM_EQ;
	private final PARAM_LTElements pPARAM_LT;
	private final PARAM_GTElements pPARAM_GT;
	private final PARAM_NEElements pPARAM_NE;
	private final PARAM_SUBPROPElements pPARAM_SUBPROP;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public ModelQueryLanguageTextualGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pQueryFile = new QueryFileElements();
		this.pModelQueryHeadParent = new ModelQueryHeadParentElements();
		this.pBranchParameter = new BranchParameterElements();
		this.pModelQueryNextFromTo = new ModelQueryNextFromToElements();
		this.pCommitParameter = new CommitParameterElements();
		this.pModelQueryModel = new ModelQueryModelElements();
		this.pModelParamater = new ModelParamaterElements();
		this.pModelQueryModelContents = new ModelQueryModelContentsElements();
		this.pProperties = new PropertiesElements();
		this.eOperator = new OperatorElements();
		this.eWhereSyn = new WhereSynElements();
		this.pEString = new EStringElements();
		this.pHEAD = new HEADElements();
		this.pPARENT = new PARENTElements();
		this.pNEXT = new NEXTElements();
		this.pFROM = new FROMElements();
		this.pTO = new TOElements();
		this.pMODEL = new MODELElements();
		this.pCHANGED = new CHANGEDElements();
		this.pCREATED = new CREATEDElements();
		this.pDELETED = new DELETEDElements();
		this.pCONTAINER_DELIM_LEFT = new CONTAINER_DELIM_LEFTElements();
		this.pCONTAINER_DELIM_RIGHT = new CONTAINER_DELIM_RIGHTElements();
		this.pSUBJECT_DELIM_LEFT = new SUBJECT_DELIM_LEFTElements();
		this.pSUBJECT_DELIM_RIGHT = new SUBJECT_DELIM_RIGHTElements();
		this.pELEM_SEPARATOR = new ELEM_SEPARATORElements();
		this.pQUERY_END = new QUERY_ENDElements();
		this.pBRANCH_NAME = new BRANCH_NAMEElements();
		this.pPARAM_EQ = new PARAM_EQElements();
		this.pPARAM_LT = new PARAM_LTElements();
		this.pPARAM_GT = new PARAM_GTElements();
		this.pPARAM_NE = new PARAM_NEElements();
		this.pPARAM_SUBPROP = new PARAM_SUBPROPElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("geodes.sms.modelquerylanguage.ModelQueryLanguageTextual".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//QueryFile returns QueryFile:
	//    {QueryFile} (
	//        queries+=(ModelQueryHeadParent
	//            | ModelQueryNextFromTo
	//            | ModelQueryModel
	//            | ModelQueryModelContents
	//        )
	//        (ELEM_SEPARATOR queries+=(ModelQueryHeadParent
	//            | ModelQueryNextFromTo
	//            | ModelQueryModel
	//            | ModelQueryModelContents
	//        ))*
	//        QUERY_END
	//    )?;
	public QueryFileElements getQueryFileAccess() {
		return pQueryFile;
	}
	
	public ParserRule getQueryFileRule() {
		return getQueryFileAccess().getRule();
	}
	
	//ModelQueryHeadParent returns ModelQuery:
	//     operator=(Operator | WhereSyn)
	//     subject=("head" | "parent") (
	//         CONTAINER_DELIM_LEFT
	//         containerParameters+=BranchParameter
	//         (ELEM_SEPARATOR containerParameters+=BranchParameter)*
	//         CONTAINER_DELIM_RIGHT
	//     )?;
	public ModelQueryHeadParentElements getModelQueryHeadParentAccess() {
		return pModelQueryHeadParent;
	}
	
	public ParserRule getModelQueryHeadParentRule() {
		return getModelQueryHeadParentAccess().getRule();
	}
	
	//BranchParameter returns ecore::EString:
	//    ("branchName" | "active")
	//    (PARAM_EQ | PARAM_GT | PARAM_LT | PARAM_NE)
	//    EString;
	public BranchParameterElements getBranchParameterAccess() {
		return pBranchParameter;
	}
	
	public ParserRule getBranchParameterRule() {
		return getBranchParameterAccess().getRule();
	}
	
	//ModelQueryNextFromTo returns ModelQuery:
	//     operator=(Operator | WhereSyn)
	//     subject=("next" | "from" | "to") (
	//         CONTAINER_DELIM_LEFT
	//         containerParameters+=CommitParameter
	//         (ELEM_SEPARATOR containerParameters+=CommitParameter)*
	//         CONTAINER_DELIM_RIGHT
	//     )?;
	public ModelQueryNextFromToElements getModelQueryNextFromToAccess() {
		return pModelQueryNextFromTo;
	}
	
	public ParserRule getModelQueryNextFromToRule() {
		return getModelQueryNextFromToAccess().getRule();
	}
	
	//CommitParameter returns ecore::EString:
	//    ("hash" | "author" | "message" | "timestamp")
	//    (PARAM_EQ | PARAM_GT | PARAM_LT | PARAM_NE)
	//    EString;
	public CommitParameterElements getCommitParameterAccess() {
		return pCommitParameter;
	}
	
	public ParserRule getCommitParameterRule() {
		return getCommitParameterAccess().getRule();
	}
	
	//ModelQueryModel returns ModelQuery:
	//     operator=(Operator | WhereSyn)
	//     subject="model" (
	//         CONTAINER_DELIM_LEFT
	//         containerParameters+=ModelParamater
	//         (ELEM_SEPARATOR containerParameters+=ModelParamater)*
	//         CONTAINER_DELIM_RIGHT
	//     )?;
	public ModelQueryModelElements getModelQueryModelAccess() {
		return pModelQueryModel;
	}
	
	public ParserRule getModelQueryModelRule() {
		return getModelQueryModelAccess().getRule();
	}
	
	//ModelParamater returns ecore::EString:
	//    ("modelId" | "isDeleted" | "owner" | "creationDate" | "path")
	//    (PARAM_EQ | PARAM_GT | PARAM_LT | PARAM_NE)
	//    EString;
	public ModelParamaterElements getModelParamaterAccess() {
		return pModelParamater;
	}
	
	public ParserRule getModelParamaterRule() {
		return getModelParamaterAccess().getRule();
	}
	
	//ModelQueryModelContents returns ModelQuery:
	//     operator=(Operator | WhereSyn)
	//     subject=("changed" | "created" | "deleted") (
	//         CONTAINER_DELIM_LEFT
	//         containerParameters+=CommitParameter
	//         (ELEM_SEPARATOR containerParameters+=CommitParameter)*
	//         CONTAINER_DELIM_RIGHT
	//     )? (
	//         SUBJECT_DELIM_LEFT
	//         diffParameters+=Properties
	//         (ELEM_SEPARATOR diffParameters+=Properties)*
	//         SUBJECT_DELIM_RIGHT
	//     )?;
	public ModelQueryModelContentsElements getModelQueryModelContentsAccess() {
		return pModelQueryModelContents;
	}
	
	public ParserRule getModelQueryModelContentsRule() {
		return getModelQueryModelContentsAccess().getRule();
	}
	
	//Properties returns ecore::EString:
	//    EString (PARAM_SUBPROP EString)*;
	public PropertiesElements getPropertiesAccess() {
		return pProperties;
	}
	
	public ParserRule getPropertiesRule() {
		return getPropertiesAccess().getRule();
	}
	
	//enum Operator:
	//    WHO | WHEN | WHAT | WHERE;
	public OperatorElements getOperatorAccess() {
		return eOperator;
	}
	
	public EnumRule getOperatorRule() {
		return getOperatorAccess().getRule();
	}
	
	//enum WhereSyn returns Operator:
	//    WHERE="DESCRIPTION";
	public WhereSynElements getWhereSynAccess() {
		return eWhereSyn;
	}
	
	public EnumRule getWhereSynRule() {
		return getWhereSynAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//HEAD: "head";
	public HEADElements getHEADAccess() {
		return pHEAD;
	}
	
	public ParserRule getHEADRule() {
		return getHEADAccess().getRule();
	}
	
	//PARENT: "parent";
	public PARENTElements getPARENTAccess() {
		return pPARENT;
	}
	
	public ParserRule getPARENTRule() {
		return getPARENTAccess().getRule();
	}
	
	//NEXT: "next";
	public NEXTElements getNEXTAccess() {
		return pNEXT;
	}
	
	public ParserRule getNEXTRule() {
		return getNEXTAccess().getRule();
	}
	
	//FROM: "from";
	public FROMElements getFROMAccess() {
		return pFROM;
	}
	
	public ParserRule getFROMRule() {
		return getFROMAccess().getRule();
	}
	
	//TO: "to";
	public TOElements getTOAccess() {
		return pTO;
	}
	
	public ParserRule getTORule() {
		return getTOAccess().getRule();
	}
	
	//MODEL: "model";
	public MODELElements getMODELAccess() {
		return pMODEL;
	}
	
	public ParserRule getMODELRule() {
		return getMODELAccess().getRule();
	}
	
	//CHANGED: "changed";
	public CHANGEDElements getCHANGEDAccess() {
		return pCHANGED;
	}
	
	public ParserRule getCHANGEDRule() {
		return getCHANGEDAccess().getRule();
	}
	
	//CREATED: "created";
	public CREATEDElements getCREATEDAccess() {
		return pCREATED;
	}
	
	public ParserRule getCREATEDRule() {
		return getCREATEDAccess().getRule();
	}
	
	//DELETED: "deleted";
	public DELETEDElements getDELETEDAccess() {
		return pDELETED;
	}
	
	public ParserRule getDELETEDRule() {
		return getDELETEDAccess().getRule();
	}
	
	//CONTAINER_DELIM_LEFT: "{";
	public CONTAINER_DELIM_LEFTElements getCONTAINER_DELIM_LEFTAccess() {
		return pCONTAINER_DELIM_LEFT;
	}
	
	public ParserRule getCONTAINER_DELIM_LEFTRule() {
		return getCONTAINER_DELIM_LEFTAccess().getRule();
	}
	
	//CONTAINER_DELIM_RIGHT: "}";
	public CONTAINER_DELIM_RIGHTElements getCONTAINER_DELIM_RIGHTAccess() {
		return pCONTAINER_DELIM_RIGHT;
	}
	
	public ParserRule getCONTAINER_DELIM_RIGHTRule() {
		return getCONTAINER_DELIM_RIGHTAccess().getRule();
	}
	
	//SUBJECT_DELIM_LEFT: "[";
	public SUBJECT_DELIM_LEFTElements getSUBJECT_DELIM_LEFTAccess() {
		return pSUBJECT_DELIM_LEFT;
	}
	
	public ParserRule getSUBJECT_DELIM_LEFTRule() {
		return getSUBJECT_DELIM_LEFTAccess().getRule();
	}
	
	//SUBJECT_DELIM_RIGHT: "]";
	public SUBJECT_DELIM_RIGHTElements getSUBJECT_DELIM_RIGHTAccess() {
		return pSUBJECT_DELIM_RIGHT;
	}
	
	public ParserRule getSUBJECT_DELIM_RIGHTRule() {
		return getSUBJECT_DELIM_RIGHTAccess().getRule();
	}
	
	//ELEM_SEPARATOR: ",";
	public ELEM_SEPARATORElements getELEM_SEPARATORAccess() {
		return pELEM_SEPARATOR;
	}
	
	public ParserRule getELEM_SEPARATORRule() {
		return getELEM_SEPARATORAccess().getRule();
	}
	
	//QUERY_END: "?";
	public QUERY_ENDElements getQUERY_ENDAccess() {
		return pQUERY_END;
	}
	
	public ParserRule getQUERY_ENDRule() {
		return getQUERY_ENDAccess().getRule();
	}
	
	//BRANCH_NAME: "branchName";
	public BRANCH_NAMEElements getBRANCH_NAMEAccess() {
		return pBRANCH_NAME;
	}
	
	public ParserRule getBRANCH_NAMERule() {
		return getBRANCH_NAMEAccess().getRule();
	}
	
	//PARAM_EQ: "=";
	public PARAM_EQElements getPARAM_EQAccess() {
		return pPARAM_EQ;
	}
	
	public ParserRule getPARAM_EQRule() {
		return getPARAM_EQAccess().getRule();
	}
	
	//PARAM_LT: "<";
	public PARAM_LTElements getPARAM_LTAccess() {
		return pPARAM_LT;
	}
	
	public ParserRule getPARAM_LTRule() {
		return getPARAM_LTAccess().getRule();
	}
	
	//PARAM_GT: ">";
	public PARAM_GTElements getPARAM_GTAccess() {
		return pPARAM_GT;
	}
	
	public ParserRule getPARAM_GTRule() {
		return getPARAM_GTAccess().getRule();
	}
	
	//PARAM_NE: "!=";
	public PARAM_NEElements getPARAM_NEAccess() {
		return pPARAM_NE;
	}
	
	public ParserRule getPARAM_NERule() {
		return getPARAM_NEAccess().getRule();
	}
	
	//PARAM_SUBPROP: ".";
	public PARAM_SUBPROPElements getPARAM_SUBPROPAccess() {
		return pPARAM_SUBPROP;
	}
	
	public ParserRule getPARAM_SUBPROPRule() {
		return getPARAM_SUBPROPAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
