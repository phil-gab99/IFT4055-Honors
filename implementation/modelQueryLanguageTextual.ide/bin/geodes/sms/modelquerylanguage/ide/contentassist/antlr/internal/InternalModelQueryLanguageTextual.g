/*
 * generated by Xtext 2.28.0
 */
grammar InternalModelQueryLanguageTextual;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package geodes.sms.modelquerylanguage.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package geodes.sms.modelquerylanguage.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import geodes.sms.modelquerylanguage.services.ModelQueryLanguageTextualGrammarAccess;

}
@parser::members {
	private ModelQueryLanguageTextualGrammarAccess grammarAccess;

	public void setGrammarAccess(ModelQueryLanguageTextualGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleQueryFile
entryRuleQueryFile
:
{ before(grammarAccess.getQueryFileRule()); }
	 ruleQueryFile
{ after(grammarAccess.getQueryFileRule()); } 
	 EOF 
;

// Rule QueryFile
ruleQueryFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueryFileAccess().getGroup()); }
		(rule__QueryFile__Group__0)
		{ after(grammarAccess.getQueryFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelQueryHeadParent
entryRuleModelQueryHeadParent
:
{ before(grammarAccess.getModelQueryHeadParentRule()); }
	 ruleModelQueryHeadParent
{ after(grammarAccess.getModelQueryHeadParentRule()); } 
	 EOF 
;

// Rule ModelQueryHeadParent
ruleModelQueryHeadParent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelQueryHeadParentAccess().getGroup()); }
		(rule__ModelQueryHeadParent__Group__0)
		{ after(grammarAccess.getModelQueryHeadParentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBranchParameter
entryRuleBranchParameter
:
{ before(grammarAccess.getBranchParameterRule()); }
	 ruleBranchParameter
{ after(grammarAccess.getBranchParameterRule()); } 
	 EOF 
;

// Rule BranchParameter
ruleBranchParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBranchParameterAccess().getGroup()); }
		(rule__BranchParameter__Group__0)
		{ after(grammarAccess.getBranchParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelQueryNextFromTo
entryRuleModelQueryNextFromTo
:
{ before(grammarAccess.getModelQueryNextFromToRule()); }
	 ruleModelQueryNextFromTo
{ after(grammarAccess.getModelQueryNextFromToRule()); } 
	 EOF 
;

// Rule ModelQueryNextFromTo
ruleModelQueryNextFromTo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelQueryNextFromToAccess().getGroup()); }
		(rule__ModelQueryNextFromTo__Group__0)
		{ after(grammarAccess.getModelQueryNextFromToAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommitParameter
entryRuleCommitParameter
:
{ before(grammarAccess.getCommitParameterRule()); }
	 ruleCommitParameter
{ after(grammarAccess.getCommitParameterRule()); } 
	 EOF 
;

// Rule CommitParameter
ruleCommitParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommitParameterAccess().getGroup()); }
		(rule__CommitParameter__Group__0)
		{ after(grammarAccess.getCommitParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelQueryModel
entryRuleModelQueryModel
:
{ before(grammarAccess.getModelQueryModelRule()); }
	 ruleModelQueryModel
{ after(grammarAccess.getModelQueryModelRule()); } 
	 EOF 
;

// Rule ModelQueryModel
ruleModelQueryModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelQueryModelAccess().getGroup()); }
		(rule__ModelQueryModel__Group__0)
		{ after(grammarAccess.getModelQueryModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelParamater
entryRuleModelParamater
:
{ before(grammarAccess.getModelParamaterRule()); }
	 ruleModelParamater
{ after(grammarAccess.getModelParamaterRule()); } 
	 EOF 
;

// Rule ModelParamater
ruleModelParamater 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelParamaterAccess().getGroup()); }
		(rule__ModelParamater__Group__0)
		{ after(grammarAccess.getModelParamaterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModelQueryModelContents
entryRuleModelQueryModelContents
:
{ before(grammarAccess.getModelQueryModelContentsRule()); }
	 ruleModelQueryModelContents
{ after(grammarAccess.getModelQueryModelContentsRule()); } 
	 EOF 
;

// Rule ModelQueryModelContents
ruleModelQueryModelContents 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelQueryModelContentsAccess().getGroup()); }
		(rule__ModelQueryModelContents__Group__0)
		{ after(grammarAccess.getModelQueryModelContentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperties
entryRuleProperties
:
{ before(grammarAccess.getPropertiesRule()); }
	 ruleProperties
{ after(grammarAccess.getPropertiesRule()); } 
	 EOF 
;

// Rule Properties
ruleProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertiesAccess().getGroup()); }
		(rule__Properties__Group__0)
		{ after(grammarAccess.getPropertiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCONTAINER_DELIM_LEFT
entryRuleCONTAINER_DELIM_LEFT
:
{ before(grammarAccess.getCONTAINER_DELIM_LEFTRule()); }
	 ruleCONTAINER_DELIM_LEFT
{ after(grammarAccess.getCONTAINER_DELIM_LEFTRule()); } 
	 EOF 
;

// Rule CONTAINER_DELIM_LEFT
ruleCONTAINER_DELIM_LEFT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCONTAINER_DELIM_LEFTAccess().getLeftCurlyBracketKeyword()); }
		'{'
		{ after(grammarAccess.getCONTAINER_DELIM_LEFTAccess().getLeftCurlyBracketKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCONTAINER_DELIM_RIGHT
entryRuleCONTAINER_DELIM_RIGHT
:
{ before(grammarAccess.getCONTAINER_DELIM_RIGHTRule()); }
	 ruleCONTAINER_DELIM_RIGHT
{ after(grammarAccess.getCONTAINER_DELIM_RIGHTRule()); } 
	 EOF 
;

// Rule CONTAINER_DELIM_RIGHT
ruleCONTAINER_DELIM_RIGHT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCONTAINER_DELIM_RIGHTAccess().getRightCurlyBracketKeyword()); }
		'}'
		{ after(grammarAccess.getCONTAINER_DELIM_RIGHTAccess().getRightCurlyBracketKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSUBJECT_DELIM_LEFT
entryRuleSUBJECT_DELIM_LEFT
:
{ before(grammarAccess.getSUBJECT_DELIM_LEFTRule()); }
	 ruleSUBJECT_DELIM_LEFT
{ after(grammarAccess.getSUBJECT_DELIM_LEFTRule()); } 
	 EOF 
;

// Rule SUBJECT_DELIM_LEFT
ruleSUBJECT_DELIM_LEFT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSUBJECT_DELIM_LEFTAccess().getLeftSquareBracketKeyword()); }
		'['
		{ after(grammarAccess.getSUBJECT_DELIM_LEFTAccess().getLeftSquareBracketKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSUBJECT_DELIM_RIGHT
entryRuleSUBJECT_DELIM_RIGHT
:
{ before(grammarAccess.getSUBJECT_DELIM_RIGHTRule()); }
	 ruleSUBJECT_DELIM_RIGHT
{ after(grammarAccess.getSUBJECT_DELIM_RIGHTRule()); } 
	 EOF 
;

// Rule SUBJECT_DELIM_RIGHT
ruleSUBJECT_DELIM_RIGHT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSUBJECT_DELIM_RIGHTAccess().getRightSquareBracketKeyword()); }
		']'
		{ after(grammarAccess.getSUBJECT_DELIM_RIGHTAccess().getRightSquareBracketKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleELEM_SEPARATOR
entryRuleELEM_SEPARATOR
:
{ before(grammarAccess.getELEM_SEPARATORRule()); }
	 ruleELEM_SEPARATOR
{ after(grammarAccess.getELEM_SEPARATORRule()); } 
	 EOF 
;

// Rule ELEM_SEPARATOR
ruleELEM_SEPARATOR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getELEM_SEPARATORAccess().getCommaKeyword()); }
		','
		{ after(grammarAccess.getELEM_SEPARATORAccess().getCommaKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQUERY_END
entryRuleQUERY_END
:
{ before(grammarAccess.getQUERY_ENDRule()); }
	 ruleQUERY_END
{ after(grammarAccess.getQUERY_ENDRule()); } 
	 EOF 
;

// Rule QUERY_END
ruleQUERY_END 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQUERY_ENDAccess().getQuestionMarkKeyword()); }
		'?'
		{ after(grammarAccess.getQUERY_ENDAccess().getQuestionMarkKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePARAM_EQ
entryRulePARAM_EQ
:
{ before(grammarAccess.getPARAM_EQRule()); }
	 rulePARAM_EQ
{ after(grammarAccess.getPARAM_EQRule()); } 
	 EOF 
;

// Rule PARAM_EQ
rulePARAM_EQ 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPARAM_EQAccess().getEqualsSignKeyword()); }
		'='
		{ after(grammarAccess.getPARAM_EQAccess().getEqualsSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePARAM_LT
entryRulePARAM_LT
:
{ before(grammarAccess.getPARAM_LTRule()); }
	 rulePARAM_LT
{ after(grammarAccess.getPARAM_LTRule()); } 
	 EOF 
;

// Rule PARAM_LT
rulePARAM_LT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPARAM_LTAccess().getLessThanSignKeyword()); }
		'<'
		{ after(grammarAccess.getPARAM_LTAccess().getLessThanSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePARAM_GT
entryRulePARAM_GT
:
{ before(grammarAccess.getPARAM_GTRule()); }
	 rulePARAM_GT
{ after(grammarAccess.getPARAM_GTRule()); } 
	 EOF 
;

// Rule PARAM_GT
rulePARAM_GT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPARAM_GTAccess().getGreaterThanSignKeyword()); }
		'>'
		{ after(grammarAccess.getPARAM_GTAccess().getGreaterThanSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePARAM_NE
entryRulePARAM_NE
:
{ before(grammarAccess.getPARAM_NERule()); }
	 rulePARAM_NE
{ after(grammarAccess.getPARAM_NERule()); } 
	 EOF 
;

// Rule PARAM_NE
rulePARAM_NE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPARAM_NEAccess().getExclamationMarkEqualsSignKeyword()); }
		'!='
		{ after(grammarAccess.getPARAM_NEAccess().getExclamationMarkEqualsSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePARAM_SUBPROP
entryRulePARAM_SUBPROP
:
{ before(grammarAccess.getPARAM_SUBPROPRule()); }
	 rulePARAM_SUBPROP
{ after(grammarAccess.getPARAM_SUBPROPRule()); } 
	 EOF 
;

// Rule PARAM_SUBPROP
rulePARAM_SUBPROP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPARAM_SUBPROPAccess().getFullStopKeyword()); }
		'.'
		{ after(grammarAccess.getPARAM_SUBPROPAccess().getFullStopKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Operator
ruleOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule WhereSyn
ruleWhereSyn
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhereSynAccess().getWHEREEnumLiteralDeclaration()); }
		('DESCRIPTION')
		{ after(grammarAccess.getWhereSynAccess().getWHEREEnumLiteralDeclaration()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryFile__QueriesAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryFileAccess().getQueriesModelQueryHeadParentParserRuleCall_1_0_0_0()); }
		ruleModelQueryHeadParent
		{ after(grammarAccess.getQueryFileAccess().getQueriesModelQueryHeadParentParserRuleCall_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getQueryFileAccess().getQueriesModelQueryNextFromToParserRuleCall_1_0_0_1()); }
		ruleModelQueryNextFromTo
		{ after(grammarAccess.getQueryFileAccess().getQueriesModelQueryNextFromToParserRuleCall_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getQueryFileAccess().getQueriesModelQueryModelParserRuleCall_1_0_0_2()); }
		ruleModelQueryModel
		{ after(grammarAccess.getQueryFileAccess().getQueriesModelQueryModelParserRuleCall_1_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getQueryFileAccess().getQueriesModelQueryModelContentsParserRuleCall_1_0_0_3()); }
		ruleModelQueryModelContents
		{ after(grammarAccess.getQueryFileAccess().getQueriesModelQueryModelContentsParserRuleCall_1_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryFile__QueriesAlternatives_1_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryFileAccess().getQueriesModelQueryHeadParentParserRuleCall_1_1_1_0_0()); }
		ruleModelQueryHeadParent
		{ after(grammarAccess.getQueryFileAccess().getQueriesModelQueryHeadParentParserRuleCall_1_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getQueryFileAccess().getQueriesModelQueryNextFromToParserRuleCall_1_1_1_0_1()); }
		ruleModelQueryNextFromTo
		{ after(grammarAccess.getQueryFileAccess().getQueriesModelQueryNextFromToParserRuleCall_1_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getQueryFileAccess().getQueriesModelQueryModelParserRuleCall_1_1_1_0_2()); }
		ruleModelQueryModel
		{ after(grammarAccess.getQueryFileAccess().getQueriesModelQueryModelParserRuleCall_1_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getQueryFileAccess().getQueriesModelQueryModelContentsParserRuleCall_1_1_1_0_3()); }
		ruleModelQueryModelContents
		{ after(grammarAccess.getQueryFileAccess().getQueriesModelQueryModelContentsParserRuleCall_1_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__OperatorAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryHeadParentAccess().getOperatorOperatorEnumRuleCall_0_0_0()); }
		ruleOperator
		{ after(grammarAccess.getModelQueryHeadParentAccess().getOperatorOperatorEnumRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelQueryHeadParentAccess().getOperatorWhereSynEnumRuleCall_0_0_1()); }
		ruleWhereSyn
		{ after(grammarAccess.getModelQueryHeadParentAccess().getOperatorWhereSynEnumRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__SubjectAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryHeadParentAccess().getSubjectHeadKeyword_1_0_0()); }
		'head'
		{ after(grammarAccess.getModelQueryHeadParentAccess().getSubjectHeadKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelQueryHeadParentAccess().getSubjectParentKeyword_1_0_1()); }
		'parent'
		{ after(grammarAccess.getModelQueryHeadParentAccess().getSubjectParentKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BranchParameter__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBranchParameterAccess().getBranchNameKeyword_0_0()); }
		'branchName'
		{ after(grammarAccess.getBranchParameterAccess().getBranchNameKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBranchParameterAccess().getActiveKeyword_0_1()); }
		'active'
		{ after(grammarAccess.getBranchParameterAccess().getActiveKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BranchParameter__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBranchParameterAccess().getPARAM_EQParserRuleCall_1_0()); }
		rulePARAM_EQ
		{ after(grammarAccess.getBranchParameterAccess().getPARAM_EQParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBranchParameterAccess().getPARAM_GTParserRuleCall_1_1()); }
		rulePARAM_GT
		{ after(grammarAccess.getBranchParameterAccess().getPARAM_GTParserRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getBranchParameterAccess().getPARAM_LTParserRuleCall_1_2()); }
		rulePARAM_LT
		{ after(grammarAccess.getBranchParameterAccess().getPARAM_LTParserRuleCall_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getBranchParameterAccess().getPARAM_NEParserRuleCall_1_3()); }
		rulePARAM_NE
		{ after(grammarAccess.getBranchParameterAccess().getPARAM_NEParserRuleCall_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__OperatorAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryNextFromToAccess().getOperatorOperatorEnumRuleCall_0_0_0()); }
		ruleOperator
		{ after(grammarAccess.getModelQueryNextFromToAccess().getOperatorOperatorEnumRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelQueryNextFromToAccess().getOperatorWhereSynEnumRuleCall_0_0_1()); }
		ruleWhereSyn
		{ after(grammarAccess.getModelQueryNextFromToAccess().getOperatorWhereSynEnumRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__SubjectAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryNextFromToAccess().getSubjectNextKeyword_1_0_0()); }
		'next'
		{ after(grammarAccess.getModelQueryNextFromToAccess().getSubjectNextKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelQueryNextFromToAccess().getSubjectFromKeyword_1_0_1()); }
		'from'
		{ after(grammarAccess.getModelQueryNextFromToAccess().getSubjectFromKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelQueryNextFromToAccess().getSubjectToKeyword_1_0_2()); }
		'to'
		{ after(grammarAccess.getModelQueryNextFromToAccess().getSubjectToKeyword_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommitParameter__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommitParameterAccess().getHashKeyword_0_0()); }
		'hash'
		{ after(grammarAccess.getCommitParameterAccess().getHashKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommitParameterAccess().getAuthorKeyword_0_1()); }
		'author'
		{ after(grammarAccess.getCommitParameterAccess().getAuthorKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommitParameterAccess().getMessageKeyword_0_2()); }
		'message'
		{ after(grammarAccess.getCommitParameterAccess().getMessageKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommitParameterAccess().getTimestampKeyword_0_3()); }
		'timestamp'
		{ after(grammarAccess.getCommitParameterAccess().getTimestampKeyword_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommitParameter__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommitParameterAccess().getPARAM_EQParserRuleCall_1_0()); }
		rulePARAM_EQ
		{ after(grammarAccess.getCommitParameterAccess().getPARAM_EQParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommitParameterAccess().getPARAM_GTParserRuleCall_1_1()); }
		rulePARAM_GT
		{ after(grammarAccess.getCommitParameterAccess().getPARAM_GTParserRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommitParameterAccess().getPARAM_LTParserRuleCall_1_2()); }
		rulePARAM_LT
		{ after(grammarAccess.getCommitParameterAccess().getPARAM_LTParserRuleCall_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommitParameterAccess().getPARAM_NEParserRuleCall_1_3()); }
		rulePARAM_NE
		{ after(grammarAccess.getCommitParameterAccess().getPARAM_NEParserRuleCall_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__OperatorAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryModelAccess().getOperatorOperatorEnumRuleCall_0_0_0()); }
		ruleOperator
		{ after(grammarAccess.getModelQueryModelAccess().getOperatorOperatorEnumRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelQueryModelAccess().getOperatorWhereSynEnumRuleCall_0_0_1()); }
		ruleWhereSyn
		{ after(grammarAccess.getModelQueryModelAccess().getOperatorWhereSynEnumRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelParamater__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelParamaterAccess().getModelIdKeyword_0_0()); }
		'modelId'
		{ after(grammarAccess.getModelParamaterAccess().getModelIdKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelParamaterAccess().getIsDeletedKeyword_0_1()); }
		'isDeleted'
		{ after(grammarAccess.getModelParamaterAccess().getIsDeletedKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelParamaterAccess().getOwnerKeyword_0_2()); }
		'owner'
		{ after(grammarAccess.getModelParamaterAccess().getOwnerKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getModelParamaterAccess().getCreationDateKeyword_0_3()); }
		'creationDate'
		{ after(grammarAccess.getModelParamaterAccess().getCreationDateKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getModelParamaterAccess().getPathKeyword_0_4()); }
		'path'
		{ after(grammarAccess.getModelParamaterAccess().getPathKeyword_0_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelParamater__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelParamaterAccess().getPARAM_EQParserRuleCall_1_0()); }
		rulePARAM_EQ
		{ after(grammarAccess.getModelParamaterAccess().getPARAM_EQParserRuleCall_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelParamaterAccess().getPARAM_GTParserRuleCall_1_1()); }
		rulePARAM_GT
		{ after(grammarAccess.getModelParamaterAccess().getPARAM_GTParserRuleCall_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelParamaterAccess().getPARAM_LTParserRuleCall_1_2()); }
		rulePARAM_LT
		{ after(grammarAccess.getModelParamaterAccess().getPARAM_LTParserRuleCall_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getModelParamaterAccess().getPARAM_NEParserRuleCall_1_3()); }
		rulePARAM_NE
		{ after(grammarAccess.getModelParamaterAccess().getPARAM_NEParserRuleCall_1_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__OperatorAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryModelContentsAccess().getOperatorOperatorEnumRuleCall_0_0_0()); }
		ruleOperator
		{ after(grammarAccess.getModelQueryModelContentsAccess().getOperatorOperatorEnumRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelQueryModelContentsAccess().getOperatorWhereSynEnumRuleCall_0_0_1()); }
		ruleWhereSyn
		{ after(grammarAccess.getModelQueryModelContentsAccess().getOperatorWhereSynEnumRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__SubjectAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryModelContentsAccess().getSubjectChangedKeyword_1_0_0()); }
		'changed'
		{ after(grammarAccess.getModelQueryModelContentsAccess().getSubjectChangedKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelQueryModelContentsAccess().getSubjectCreatedKeyword_1_0_1()); }
		'created'
		{ after(grammarAccess.getModelQueryModelContentsAccess().getSubjectCreatedKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelQueryModelContentsAccess().getSubjectDeletedKeyword_1_0_2()); }
		'deleted'
		{ after(grammarAccess.getModelQueryModelContentsAccess().getSubjectDeletedKeyword_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getWHOEnumLiteralDeclaration_0()); }
		('WHO')
		{ after(grammarAccess.getOperatorAccess().getWHOEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getWHENEnumLiteralDeclaration_1()); }
		('WHEN')
		{ after(grammarAccess.getOperatorAccess().getWHENEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getWHATEnumLiteralDeclaration_2()); }
		('WHAT')
		{ after(grammarAccess.getOperatorAccess().getWHATEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getWHEREEnumLiteralDeclaration_3()); }
		('WHERE')
		{ after(grammarAccess.getOperatorAccess().getWHEREEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryFile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryFile__Group__0__Impl
	rule__QueryFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryFile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryFileAccess().getQueryFileAction_0()); }
	()
	{ after(grammarAccess.getQueryFileAccess().getQueryFileAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryFile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryFile__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryFile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryFileAccess().getGroup_1()); }
	(rule__QueryFile__Group_1__0)?
	{ after(grammarAccess.getQueryFileAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryFile__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryFile__Group_1__0__Impl
	rule__QueryFile__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryFile__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryFileAccess().getQueriesAssignment_1_0()); }
	(rule__QueryFile__QueriesAssignment_1_0)
	{ after(grammarAccess.getQueryFileAccess().getQueriesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryFile__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryFile__Group_1__1__Impl
	rule__QueryFile__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryFile__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryFileAccess().getGroup_1_1()); }
	(rule__QueryFile__Group_1_1__0)*
	{ after(grammarAccess.getQueryFileAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryFile__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryFile__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryFile__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryFileAccess().getQUERY_ENDParserRuleCall_1_2()); }
	ruleQUERY_END
	{ after(grammarAccess.getQueryFileAccess().getQUERY_ENDParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryFile__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryFile__Group_1_1__0__Impl
	rule__QueryFile__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryFile__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryFileAccess().getELEM_SEPARATORParserRuleCall_1_1_0()); }
	ruleELEM_SEPARATOR
	{ after(grammarAccess.getQueryFileAccess().getELEM_SEPARATORParserRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryFile__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QueryFile__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryFile__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQueryFileAccess().getQueriesAssignment_1_1_1()); }
	(rule__QueryFile__QueriesAssignment_1_1_1)
	{ after(grammarAccess.getQueryFileAccess().getQueriesAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelQueryHeadParent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryHeadParent__Group__0__Impl
	rule__ModelQueryHeadParent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryHeadParentAccess().getOperatorAssignment_0()); }
	(rule__ModelQueryHeadParent__OperatorAssignment_0)
	{ after(grammarAccess.getModelQueryHeadParentAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryHeadParent__Group__1__Impl
	rule__ModelQueryHeadParent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryHeadParentAccess().getSubjectAssignment_1()); }
	(rule__ModelQueryHeadParent__SubjectAssignment_1)
	{ after(grammarAccess.getModelQueryHeadParentAccess().getSubjectAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryHeadParent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryHeadParentAccess().getGroup_2()); }
	(rule__ModelQueryHeadParent__Group_2__0)?
	{ after(grammarAccess.getModelQueryHeadParentAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelQueryHeadParent__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryHeadParent__Group_2__0__Impl
	rule__ModelQueryHeadParent__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryHeadParentAccess().getCONTAINER_DELIM_LEFTParserRuleCall_2_0()); }
	ruleCONTAINER_DELIM_LEFT
	{ after(grammarAccess.getModelQueryHeadParentAccess().getCONTAINER_DELIM_LEFTParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryHeadParent__Group_2__1__Impl
	rule__ModelQueryHeadParent__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryHeadParentAccess().getContainerParametersAssignment_2_1()); }
	(rule__ModelQueryHeadParent__ContainerParametersAssignment_2_1)
	{ after(grammarAccess.getModelQueryHeadParentAccess().getContainerParametersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryHeadParent__Group_2__2__Impl
	rule__ModelQueryHeadParent__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryHeadParentAccess().getGroup_2_2()); }
	(rule__ModelQueryHeadParent__Group_2_2__0)*
	{ after(grammarAccess.getModelQueryHeadParentAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryHeadParent__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryHeadParentAccess().getCONTAINER_DELIM_RIGHTParserRuleCall_2_3()); }
	ruleCONTAINER_DELIM_RIGHT
	{ after(grammarAccess.getModelQueryHeadParentAccess().getCONTAINER_DELIM_RIGHTParserRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelQueryHeadParent__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryHeadParent__Group_2_2__0__Impl
	rule__ModelQueryHeadParent__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryHeadParentAccess().getELEM_SEPARATORParserRuleCall_2_2_0()); }
	ruleELEM_SEPARATOR
	{ after(grammarAccess.getModelQueryHeadParentAccess().getELEM_SEPARATORParserRuleCall_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryHeadParent__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryHeadParentAccess().getContainerParametersAssignment_2_2_1()); }
	(rule__ModelQueryHeadParent__ContainerParametersAssignment_2_2_1)
	{ after(grammarAccess.getModelQueryHeadParentAccess().getContainerParametersAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BranchParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BranchParameter__Group__0__Impl
	rule__BranchParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BranchParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBranchParameterAccess().getAlternatives_0()); }
	(rule__BranchParameter__Alternatives_0)
	{ after(grammarAccess.getBranchParameterAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BranchParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BranchParameter__Group__1__Impl
	rule__BranchParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BranchParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBranchParameterAccess().getAlternatives_1()); }
	(rule__BranchParameter__Alternatives_1)
	{ after(grammarAccess.getBranchParameterAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BranchParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BranchParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BranchParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBranchParameterAccess().getEStringParserRuleCall_2()); }
	ruleEString
	{ after(grammarAccess.getBranchParameterAccess().getEStringParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelQueryNextFromTo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryNextFromTo__Group__0__Impl
	rule__ModelQueryNextFromTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryNextFromToAccess().getOperatorAssignment_0()); }
	(rule__ModelQueryNextFromTo__OperatorAssignment_0)
	{ after(grammarAccess.getModelQueryNextFromToAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryNextFromTo__Group__1__Impl
	rule__ModelQueryNextFromTo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryNextFromToAccess().getSubjectAssignment_1()); }
	(rule__ModelQueryNextFromTo__SubjectAssignment_1)
	{ after(grammarAccess.getModelQueryNextFromToAccess().getSubjectAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryNextFromTo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryNextFromToAccess().getGroup_2()); }
	(rule__ModelQueryNextFromTo__Group_2__0)?
	{ after(grammarAccess.getModelQueryNextFromToAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelQueryNextFromTo__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryNextFromTo__Group_2__0__Impl
	rule__ModelQueryNextFromTo__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryNextFromToAccess().getCONTAINER_DELIM_LEFTParserRuleCall_2_0()); }
	ruleCONTAINER_DELIM_LEFT
	{ after(grammarAccess.getModelQueryNextFromToAccess().getCONTAINER_DELIM_LEFTParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryNextFromTo__Group_2__1__Impl
	rule__ModelQueryNextFromTo__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryNextFromToAccess().getContainerParametersAssignment_2_1()); }
	(rule__ModelQueryNextFromTo__ContainerParametersAssignment_2_1)
	{ after(grammarAccess.getModelQueryNextFromToAccess().getContainerParametersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryNextFromTo__Group_2__2__Impl
	rule__ModelQueryNextFromTo__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryNextFromToAccess().getGroup_2_2()); }
	(rule__ModelQueryNextFromTo__Group_2_2__0)*
	{ after(grammarAccess.getModelQueryNextFromToAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryNextFromTo__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryNextFromToAccess().getCONTAINER_DELIM_RIGHTParserRuleCall_2_3()); }
	ruleCONTAINER_DELIM_RIGHT
	{ after(grammarAccess.getModelQueryNextFromToAccess().getCONTAINER_DELIM_RIGHTParserRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelQueryNextFromTo__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryNextFromTo__Group_2_2__0__Impl
	rule__ModelQueryNextFromTo__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryNextFromToAccess().getELEM_SEPARATORParserRuleCall_2_2_0()); }
	ruleELEM_SEPARATOR
	{ after(grammarAccess.getModelQueryNextFromToAccess().getELEM_SEPARATORParserRuleCall_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryNextFromTo__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryNextFromToAccess().getContainerParametersAssignment_2_2_1()); }
	(rule__ModelQueryNextFromTo__ContainerParametersAssignment_2_2_1)
	{ after(grammarAccess.getModelQueryNextFromToAccess().getContainerParametersAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommitParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommitParameter__Group__0__Impl
	rule__CommitParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommitParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommitParameterAccess().getAlternatives_0()); }
	(rule__CommitParameter__Alternatives_0)
	{ after(grammarAccess.getCommitParameterAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommitParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommitParameter__Group__1__Impl
	rule__CommitParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommitParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommitParameterAccess().getAlternatives_1()); }
	(rule__CommitParameter__Alternatives_1)
	{ after(grammarAccess.getCommitParameterAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommitParameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommitParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommitParameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommitParameterAccess().getEStringParserRuleCall_2()); }
	ruleEString
	{ after(grammarAccess.getCommitParameterAccess().getEStringParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelQueryModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModel__Group__0__Impl
	rule__ModelQueryModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelAccess().getOperatorAssignment_0()); }
	(rule__ModelQueryModel__OperatorAssignment_0)
	{ after(grammarAccess.getModelQueryModelAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModel__Group__1__Impl
	rule__ModelQueryModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelAccess().getSubjectAssignment_1()); }
	(rule__ModelQueryModel__SubjectAssignment_1)
	{ after(grammarAccess.getModelQueryModelAccess().getSubjectAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelAccess().getGroup_2()); }
	(rule__ModelQueryModel__Group_2__0)?
	{ after(grammarAccess.getModelQueryModelAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelQueryModel__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModel__Group_2__0__Impl
	rule__ModelQueryModel__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelAccess().getCONTAINER_DELIM_LEFTParserRuleCall_2_0()); }
	ruleCONTAINER_DELIM_LEFT
	{ after(grammarAccess.getModelQueryModelAccess().getCONTAINER_DELIM_LEFTParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModel__Group_2__1__Impl
	rule__ModelQueryModel__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelAccess().getContainerParametersAssignment_2_1()); }
	(rule__ModelQueryModel__ContainerParametersAssignment_2_1)
	{ after(grammarAccess.getModelQueryModelAccess().getContainerParametersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModel__Group_2__2__Impl
	rule__ModelQueryModel__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelAccess().getGroup_2_2()); }
	(rule__ModelQueryModel__Group_2_2__0)*
	{ after(grammarAccess.getModelQueryModelAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModel__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelAccess().getCONTAINER_DELIM_RIGHTParserRuleCall_2_3()); }
	ruleCONTAINER_DELIM_RIGHT
	{ after(grammarAccess.getModelQueryModelAccess().getCONTAINER_DELIM_RIGHTParserRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelQueryModel__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModel__Group_2_2__0__Impl
	rule__ModelQueryModel__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelAccess().getELEM_SEPARATORParserRuleCall_2_2_0()); }
	ruleELEM_SEPARATOR
	{ after(grammarAccess.getModelQueryModelAccess().getELEM_SEPARATORParserRuleCall_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModel__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelAccess().getContainerParametersAssignment_2_2_1()); }
	(rule__ModelQueryModel__ContainerParametersAssignment_2_2_1)
	{ after(grammarAccess.getModelQueryModelAccess().getContainerParametersAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelParamater__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelParamater__Group__0__Impl
	rule__ModelParamater__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelParamater__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelParamaterAccess().getAlternatives_0()); }
	(rule__ModelParamater__Alternatives_0)
	{ after(grammarAccess.getModelParamaterAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelParamater__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelParamater__Group__1__Impl
	rule__ModelParamater__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelParamater__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelParamaterAccess().getAlternatives_1()); }
	(rule__ModelParamater__Alternatives_1)
	{ after(grammarAccess.getModelParamaterAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelParamater__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelParamater__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelParamater__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelParamaterAccess().getEStringParserRuleCall_2()); }
	ruleEString
	{ after(grammarAccess.getModelParamaterAccess().getEStringParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelQueryModelContents__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group__0__Impl
	rule__ModelQueryModelContents__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getOperatorAssignment_0()); }
	(rule__ModelQueryModelContents__OperatorAssignment_0)
	{ after(grammarAccess.getModelQueryModelContentsAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group__1__Impl
	rule__ModelQueryModelContents__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getSubjectAssignment_1()); }
	(rule__ModelQueryModelContents__SubjectAssignment_1)
	{ after(grammarAccess.getModelQueryModelContentsAccess().getSubjectAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group__2__Impl
	rule__ModelQueryModelContents__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getGroup_2()); }
	(rule__ModelQueryModelContents__Group_2__0)?
	{ after(grammarAccess.getModelQueryModelContentsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getGroup_3()); }
	(rule__ModelQueryModelContents__Group_3__0)?
	{ after(grammarAccess.getModelQueryModelContentsAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelQueryModelContents__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group_2__0__Impl
	rule__ModelQueryModelContents__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getCONTAINER_DELIM_LEFTParserRuleCall_2_0()); }
	ruleCONTAINER_DELIM_LEFT
	{ after(grammarAccess.getModelQueryModelContentsAccess().getCONTAINER_DELIM_LEFTParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group_2__1__Impl
	rule__ModelQueryModelContents__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getContainerParametersAssignment_2_1()); }
	(rule__ModelQueryModelContents__ContainerParametersAssignment_2_1)
	{ after(grammarAccess.getModelQueryModelContentsAccess().getContainerParametersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group_2__2__Impl
	rule__ModelQueryModelContents__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getGroup_2_2()); }
	(rule__ModelQueryModelContents__Group_2_2__0)*
	{ after(grammarAccess.getModelQueryModelContentsAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getCONTAINER_DELIM_RIGHTParserRuleCall_2_3()); }
	ruleCONTAINER_DELIM_RIGHT
	{ after(grammarAccess.getModelQueryModelContentsAccess().getCONTAINER_DELIM_RIGHTParserRuleCall_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelQueryModelContents__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group_2_2__0__Impl
	rule__ModelQueryModelContents__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getELEM_SEPARATORParserRuleCall_2_2_0()); }
	ruleELEM_SEPARATOR
	{ after(grammarAccess.getModelQueryModelContentsAccess().getELEM_SEPARATORParserRuleCall_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getContainerParametersAssignment_2_2_1()); }
	(rule__ModelQueryModelContents__ContainerParametersAssignment_2_2_1)
	{ after(grammarAccess.getModelQueryModelContentsAccess().getContainerParametersAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelQueryModelContents__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group_3__0__Impl
	rule__ModelQueryModelContents__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getSUBJECT_DELIM_LEFTParserRuleCall_3_0()); }
	ruleSUBJECT_DELIM_LEFT
	{ after(grammarAccess.getModelQueryModelContentsAccess().getSUBJECT_DELIM_LEFTParserRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group_3__1__Impl
	rule__ModelQueryModelContents__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getDiffParametersAssignment_3_1()); }
	(rule__ModelQueryModelContents__DiffParametersAssignment_3_1)
	{ after(grammarAccess.getModelQueryModelContentsAccess().getDiffParametersAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group_3__2__Impl
	rule__ModelQueryModelContents__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getGroup_3_2()); }
	(rule__ModelQueryModelContents__Group_3_2__0)*
	{ after(grammarAccess.getModelQueryModelContentsAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getSUBJECT_DELIM_RIGHTParserRuleCall_3_3()); }
	ruleSUBJECT_DELIM_RIGHT
	{ after(grammarAccess.getModelQueryModelContentsAccess().getSUBJECT_DELIM_RIGHTParserRuleCall_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModelQueryModelContents__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group_3_2__0__Impl
	rule__ModelQueryModelContents__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getELEM_SEPARATORParserRuleCall_3_2_0()); }
	ruleELEM_SEPARATOR
	{ after(grammarAccess.getModelQueryModelContentsAccess().getELEM_SEPARATORParserRuleCall_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModelQueryModelContents__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelQueryModelContentsAccess().getDiffParametersAssignment_3_2_1()); }
	(rule__ModelQueryModelContents__DiffParametersAssignment_3_2_1)
	{ after(grammarAccess.getModelQueryModelContentsAccess().getDiffParametersAssignment_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Properties__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group__0__Impl
	rule__Properties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getEStringParserRuleCall_0()); }
	ruleEString
	{ after(grammarAccess.getPropertiesAccess().getEStringParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getGroup_1()); }
	(rule__Properties__Group_1__0)*
	{ after(grammarAccess.getPropertiesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Properties__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group_1__0__Impl
	rule__Properties__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getPARAM_SUBPROPParserRuleCall_1_0()); }
	rulePARAM_SUBPROP
	{ after(grammarAccess.getPropertiesAccess().getPARAM_SUBPROPParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getEStringParserRuleCall_1_1()); }
	ruleEString
	{ after(grammarAccess.getPropertiesAccess().getEStringParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QueryFile__QueriesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryFileAccess().getQueriesAlternatives_1_0_0()); }
		(rule__QueryFile__QueriesAlternatives_1_0_0)
		{ after(grammarAccess.getQueryFileAccess().getQueriesAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QueryFile__QueriesAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueryFileAccess().getQueriesAlternatives_1_1_1_0()); }
		(rule__QueryFile__QueriesAlternatives_1_1_1_0)
		{ after(grammarAccess.getQueryFileAccess().getQueriesAlternatives_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryHeadParentAccess().getOperatorAlternatives_0_0()); }
		(rule__ModelQueryHeadParent__OperatorAlternatives_0_0)
		{ after(grammarAccess.getModelQueryHeadParentAccess().getOperatorAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__SubjectAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryHeadParentAccess().getSubjectAlternatives_1_0()); }
		(rule__ModelQueryHeadParent__SubjectAlternatives_1_0)
		{ after(grammarAccess.getModelQueryHeadParentAccess().getSubjectAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__ContainerParametersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryHeadParentAccess().getContainerParametersBranchParameterParserRuleCall_2_1_0()); }
		ruleBranchParameter
		{ after(grammarAccess.getModelQueryHeadParentAccess().getContainerParametersBranchParameterParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryHeadParent__ContainerParametersAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryHeadParentAccess().getContainerParametersBranchParameterParserRuleCall_2_2_1_0()); }
		ruleBranchParameter
		{ after(grammarAccess.getModelQueryHeadParentAccess().getContainerParametersBranchParameterParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryNextFromToAccess().getOperatorAlternatives_0_0()); }
		(rule__ModelQueryNextFromTo__OperatorAlternatives_0_0)
		{ after(grammarAccess.getModelQueryNextFromToAccess().getOperatorAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__SubjectAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryNextFromToAccess().getSubjectAlternatives_1_0()); }
		(rule__ModelQueryNextFromTo__SubjectAlternatives_1_0)
		{ after(grammarAccess.getModelQueryNextFromToAccess().getSubjectAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__ContainerParametersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryNextFromToAccess().getContainerParametersCommitParameterParserRuleCall_2_1_0()); }
		ruleCommitParameter
		{ after(grammarAccess.getModelQueryNextFromToAccess().getContainerParametersCommitParameterParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryNextFromTo__ContainerParametersAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryNextFromToAccess().getContainerParametersCommitParameterParserRuleCall_2_2_1_0()); }
		ruleCommitParameter
		{ after(grammarAccess.getModelQueryNextFromToAccess().getContainerParametersCommitParameterParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryModelAccess().getOperatorAlternatives_0_0()); }
		(rule__ModelQueryModel__OperatorAlternatives_0_0)
		{ after(grammarAccess.getModelQueryModelAccess().getOperatorAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__SubjectAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryModelAccess().getSubjectModelKeyword_1_0()); }
		(
			{ before(grammarAccess.getModelQueryModelAccess().getSubjectModelKeyword_1_0()); }
			'model'
			{ after(grammarAccess.getModelQueryModelAccess().getSubjectModelKeyword_1_0()); }
		)
		{ after(grammarAccess.getModelQueryModelAccess().getSubjectModelKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__ContainerParametersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryModelAccess().getContainerParametersModelParamaterParserRuleCall_2_1_0()); }
		ruleModelParamater
		{ after(grammarAccess.getModelQueryModelAccess().getContainerParametersModelParamaterParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModel__ContainerParametersAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryModelAccess().getContainerParametersModelParamaterParserRuleCall_2_2_1_0()); }
		ruleModelParamater
		{ after(grammarAccess.getModelQueryModelAccess().getContainerParametersModelParamaterParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryModelContentsAccess().getOperatorAlternatives_0_0()); }
		(rule__ModelQueryModelContents__OperatorAlternatives_0_0)
		{ after(grammarAccess.getModelQueryModelContentsAccess().getOperatorAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__SubjectAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryModelContentsAccess().getSubjectAlternatives_1_0()); }
		(rule__ModelQueryModelContents__SubjectAlternatives_1_0)
		{ after(grammarAccess.getModelQueryModelContentsAccess().getSubjectAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__ContainerParametersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryModelContentsAccess().getContainerParametersCommitParameterParserRuleCall_2_1_0()); }
		ruleCommitParameter
		{ after(grammarAccess.getModelQueryModelContentsAccess().getContainerParametersCommitParameterParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__ContainerParametersAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryModelContentsAccess().getContainerParametersCommitParameterParserRuleCall_2_2_1_0()); }
		ruleCommitParameter
		{ after(grammarAccess.getModelQueryModelContentsAccess().getContainerParametersCommitParameterParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__DiffParametersAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryModelContentsAccess().getDiffParametersPropertiesParserRuleCall_3_1_0()); }
		ruleProperties
		{ after(grammarAccess.getModelQueryModelContentsAccess().getDiffParametersPropertiesParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModelQueryModelContents__DiffParametersAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelQueryModelContentsAccess().getDiffParametersPropertiesParserRuleCall_3_2_1_0()); }
		ruleProperties
		{ after(grammarAccess.getModelQueryModelContentsAccess().getDiffParametersPropertiesParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
